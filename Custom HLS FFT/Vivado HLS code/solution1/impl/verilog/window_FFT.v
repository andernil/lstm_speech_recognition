// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="window_FFT,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-1-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=2533749,HLS_SYN_TPT=none,HLS_SYN_MEM=37,HLS_SYN_DSP=106,HLS_SYN_FF=22885,HLS_SYN_LUT=27301,HLS_VERSION=2018_3}" *)

module window_FFT (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_data_M_real_address0,
        input_data_M_real_ce0,
        input_data_M_real_q0,
        input_data_M_imag_address0,
        input_data_M_imag_ce0,
        input_data_M_imag_we0,
        input_data_M_imag_d0,
        input_data_M_imag_q0,
        input_data_M_imag_address1,
        input_data_M_imag_ce1,
        input_data_M_imag_we1,
        input_data_M_imag_d1,
        input_data_M_imag_q1,
        output_data_address0,
        output_data_ce0,
        output_data_we0,
        output_data_d0,
        peak_value
);

parameter    ap_ST_fsm_state1 = 93'd1;
parameter    ap_ST_fsm_state2 = 93'd2;
parameter    ap_ST_fsm_state3 = 93'd4;
parameter    ap_ST_fsm_state4 = 93'd8;
parameter    ap_ST_fsm_state5 = 93'd16;
parameter    ap_ST_fsm_state6 = 93'd32;
parameter    ap_ST_fsm_state7 = 93'd64;
parameter    ap_ST_fsm_state8 = 93'd128;
parameter    ap_ST_fsm_state9 = 93'd256;
parameter    ap_ST_fsm_state10 = 93'd512;
parameter    ap_ST_fsm_state11 = 93'd1024;
parameter    ap_ST_fsm_state12 = 93'd2048;
parameter    ap_ST_fsm_state13 = 93'd4096;
parameter    ap_ST_fsm_state14 = 93'd8192;
parameter    ap_ST_fsm_state15 = 93'd16384;
parameter    ap_ST_fsm_state16 = 93'd32768;
parameter    ap_ST_fsm_state17 = 93'd65536;
parameter    ap_ST_fsm_state18 = 93'd131072;
parameter    ap_ST_fsm_state19 = 93'd262144;
parameter    ap_ST_fsm_state20 = 93'd524288;
parameter    ap_ST_fsm_state21 = 93'd1048576;
parameter    ap_ST_fsm_state22 = 93'd2097152;
parameter    ap_ST_fsm_state23 = 93'd4194304;
parameter    ap_ST_fsm_state24 = 93'd8388608;
parameter    ap_ST_fsm_state25 = 93'd16777216;
parameter    ap_ST_fsm_state26 = 93'd33554432;
parameter    ap_ST_fsm_state27 = 93'd67108864;
parameter    ap_ST_fsm_state28 = 93'd134217728;
parameter    ap_ST_fsm_state29 = 93'd268435456;
parameter    ap_ST_fsm_state30 = 93'd536870912;
parameter    ap_ST_fsm_state31 = 93'd1073741824;
parameter    ap_ST_fsm_state32 = 93'd2147483648;
parameter    ap_ST_fsm_state33 = 93'd4294967296;
parameter    ap_ST_fsm_state34 = 93'd8589934592;
parameter    ap_ST_fsm_state35 = 93'd17179869184;
parameter    ap_ST_fsm_state36 = 93'd34359738368;
parameter    ap_ST_fsm_state37 = 93'd68719476736;
parameter    ap_ST_fsm_state38 = 93'd137438953472;
parameter    ap_ST_fsm_state39 = 93'd274877906944;
parameter    ap_ST_fsm_state40 = 93'd549755813888;
parameter    ap_ST_fsm_state41 = 93'd1099511627776;
parameter    ap_ST_fsm_state42 = 93'd2199023255552;
parameter    ap_ST_fsm_state43 = 93'd4398046511104;
parameter    ap_ST_fsm_state44 = 93'd8796093022208;
parameter    ap_ST_fsm_state45 = 93'd17592186044416;
parameter    ap_ST_fsm_state46 = 93'd35184372088832;
parameter    ap_ST_fsm_state47 = 93'd70368744177664;
parameter    ap_ST_fsm_state48 = 93'd140737488355328;
parameter    ap_ST_fsm_state49 = 93'd281474976710656;
parameter    ap_ST_fsm_state50 = 93'd562949953421312;
parameter    ap_ST_fsm_state51 = 93'd1125899906842624;
parameter    ap_ST_fsm_state52 = 93'd2251799813685248;
parameter    ap_ST_fsm_state53 = 93'd4503599627370496;
parameter    ap_ST_fsm_state54 = 93'd9007199254740992;
parameter    ap_ST_fsm_state55 = 93'd18014398509481984;
parameter    ap_ST_fsm_state56 = 93'd36028797018963968;
parameter    ap_ST_fsm_state57 = 93'd72057594037927936;
parameter    ap_ST_fsm_state58 = 93'd144115188075855872;
parameter    ap_ST_fsm_state59 = 93'd288230376151711744;
parameter    ap_ST_fsm_state60 = 93'd576460752303423488;
parameter    ap_ST_fsm_state61 = 93'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 93'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 93'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 93'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 93'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 93'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 93'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 93'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 93'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 93'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 93'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 93'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 93'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 93'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 93'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 93'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 93'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 93'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 93'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 93'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 93'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 93'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 93'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 93'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 93'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 93'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 93'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 93'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 93'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 93'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 93'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 93'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 93'd4951760157141521099596496896;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] input_data_M_real_address0;
output   input_data_M_real_ce0;
input  [63:0] input_data_M_real_q0;
output  [13:0] input_data_M_imag_address0;
output   input_data_M_imag_ce0;
output   input_data_M_imag_we0;
output  [63:0] input_data_M_imag_d0;
input  [63:0] input_data_M_imag_q0;
output  [13:0] input_data_M_imag_address1;
output   input_data_M_imag_ce1;
output   input_data_M_imag_we1;
output  [63:0] input_data_M_imag_d1;
input  [63:0] input_data_M_imag_q1;
output  [15:0] output_data_address0;
output   output_data_ce0;
output   output_data_we0;
output  [63:0] output_data_d0;
input  [31:0] peak_value;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_data_M_real_ce0;
reg output_data_ce0;
reg output_data_we0;

(* fsm_encoding = "none" *) reg   [92:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [3:0] ref_4oPi_table_256_V_address0;
reg    ref_4oPi_table_256_V_ce0;
wire   [255:0] ref_4oPi_table_256_V_q0;
wire   [7:0] fourth_order_double_4_address0;
reg    fourth_order_double_4_ce0;
wire   [58:0] fourth_order_double_4_q0;
wire   [7:0] fourth_order_double_5_address0;
reg    fourth_order_double_5_ce0;
wire   [51:0] fourth_order_double_5_q0;
wire   [7:0] fourth_order_double_6_address0;
reg    fourth_order_double_6_ce0;
wire   [43:0] fourth_order_double_6_q0;
wire   [7:0] fourth_order_double_7_address0;
reg    fourth_order_double_7_ce0;
wire   [32:0] fourth_order_double_7_q0;
wire   [7:0] fourth_order_double_s_address0;
reg    fourth_order_double_s_ce0;
wire   [24:0] fourth_order_double_s_q0;
wire   [63:0] grp_fu_587_p2;
reg   [63:0] reg_602;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state84;
wire   [31:0] tmp_fu_609_p2;
wire   [63:0] grp_fu_599_p1;
reg   [63:0] scaling_reg_2331;
wire    ap_CS_fsm_state4;
wire   [31:0] i_cast_fu_616_p1;
wire    ap_CS_fsm_state5;
wire   [10:0] i_2_fu_627_p2;
reg   [10:0] i_2_reg_2344;
reg   [63:0] tmp_7_reg_2349;
wire    ap_CS_fsm_state8;
wire   [63:0] grp_fu_593_p2;
reg   [63:0] x_assign_reg_2354;
wire    ap_CS_fsm_state35;
reg   [0:0] p_Result_s_reg_2359;
wire    ap_CS_fsm_state36;
wire   [10:0] tmp_V_8_fu_644_p4;
reg   [10:0] tmp_V_8_reg_2364;
wire   [51:0] tmp_V_9_fu_654_p1;
reg   [51:0] tmp_V_9_reg_2371;
wire   [0:0] closepath_fu_658_p2;
reg   [0:0] closepath_reg_2377;
wire   [6:0] tmp_23_fu_693_p1;
reg   [6:0] tmp_23_reg_2388;
wire    ap_CS_fsm_state37;
wire   [0:0] tmp_75_i_fu_737_p2;
reg   [0:0] tmp_75_i_reg_2403;
reg   [123:0] p_Val2_33_reg_2409;
wire    ap_CS_fsm_state38;
reg   [2:0] tmp_86_i_i_reg_2415;
wire   [2:0] p_Val2_34_fu_774_p3;
reg   [2:0] p_Val2_34_reg_2420;
wire    ap_CS_fsm_state39;
reg   [62:0] Mx_V_reg_2426;
wire  signed [10:0] Ex_V_fu_868_p2;
reg  signed [10:0] Ex_V_reg_2433;
reg   [0:0] isNeg_reg_2439;
wire   [0:0] tmp_74_i_fu_882_p2;
reg   [0:0] tmp_74_i_reg_2445;
wire   [0:0] tmp_76_i_fu_887_p2;
reg   [0:0] tmp_76_i_reg_2451;
wire   [0:0] sin_basis_fu_933_p10;
reg   [0:0] sin_basis_reg_2458;
wire    ap_CS_fsm_state40;
wire   [55:0] B_V_fu_964_p1;
reg   [55:0] B_V_reg_2465;
wire   [97:0] r_V_9_fu_978_p1;
reg   [97:0] r_V_9_reg_2470;
reg   [48:0] B_squared_V_reg_2475;
reg   [41:0] B_third_power_V_reg_2506;
wire    ap_CS_fsm_state41;
reg   [58:0] p_Val2_16_reg_2511;
reg   [55:0] tmp_77_i_i_reg_2516;
reg   [47:0] tmp_79_i_i_reg_2521;
reg   [32:0] fourth_order_double_14_reg_2526;
reg   [28:0] tmp_17_reg_2531;
wire   [63:0] ret_V_fu_1191_p2;
reg   [63:0] ret_V_reg_2536;
wire    ap_CS_fsm_state42;
reg   [62:0] result_V_reg_2541;
wire    ap_CS_fsm_state43;
wire   [11:0] ret_V_2_fu_1237_p2;
reg   [11:0] ret_V_2_reg_2546;
wire   [0:0] p_Repl2_3_fu_1391_p2;
reg   [0:0] p_Repl2_3_reg_2551;
wire    ap_CS_fsm_state44;
wire    grp_scaled_fixed2ieee_fu_576_ap_ready;
wire    grp_scaled_fixed2ieee_fu_576_ap_done;
wire   [10:0] ret_V_9_fu_1410_p3;
reg   [10:0] ret_V_9_reg_2556;
wire   [51:0] ret_V_10_fu_1432_p3;
reg   [51:0] ret_V_10_reg_2561;
wire   [63:0] ret_i_i_i_fu_1447_p1;
wire    ap_CS_fsm_state45;
wire   [63:0] grp_fu_582_p2;
reg   [63:0] tmp_3_reg_2571;
wire    ap_CS_fsm_state54;
wire   [6:0] frame_1_fu_1463_p2;
reg   [6:0] frame_1_reg_2579;
wire    ap_CS_fsm_state77;
wire   [13:0] tmp_6_fu_1469_p3;
reg   [13:0] tmp_6_reg_2584;
wire   [0:0] exitcond2_fu_1457_p2;
wire   [10:0] i_3_fu_1487_p2;
reg   [10:0] i_3_reg_2592;
wire    ap_CS_fsm_state78;
wire   [63:0] tmp_s_fu_1493_p1;
reg   [63:0] tmp_s_reg_2597;
wire   [0:0] exitcond3_fu_1481_p2;
reg   [63:0] input_data_M_real_l_reg_2612;
wire    ap_CS_fsm_state79;
wire   [63:0] hamming_window_q0;
reg   [63:0] hamming_window_load_reg_2617;
wire   [10:0] i_4_fu_1514_p2;
reg   [10:0] i_4_reg_2625;
wire    ap_CS_fsm_state86;
wire   [0:0] exitcond4_fu_1508_p2;
wire   [31:0] newSel3_fu_1813_p3;
reg   [31:0] newSel3_reg_2635;
wire    ap_CS_fsm_state87;
wire   [15:0] tmp_12_fu_1829_p3;
reg   [15:0] tmp_12_reg_2640;
wire    ap_CS_fsm_state89;
wire    grp_FFT_fu_568_ap_ready;
wire    grp_FFT_fu_568_ap_done;
wire    ap_sync_grp_FFT_fu_568_ap_ready;
wire    ap_sync_grp_FFT_fu_568_ap_done;
reg    ap_block_state89_on_subcall_done;
wire   [9:0] j_1_fu_1847_p2;
reg   [9:0] j_1_reg_2648;
wire    ap_CS_fsm_state90;
wire   [63:0] from_FFT_dout;
wire    from_FFT_empty_n;
reg    from_FFT_read;
wire   [0:0] exitcond5_fu_1841_p2;
reg    ap_block_state90;
wire   [21:0] tmp_65_fu_1853_p1;
reg   [21:0] tmp_65_reg_2653;
reg   [21:0] tmp_38_reg_2658;
wire   [15:0] tmp_58_fu_1867_p2;
reg   [15:0] tmp_58_reg_2663;
wire   [55:0] tmp_21_fu_1968_p3;
reg   [55:0] tmp_21_reg_2668;
wire    ap_CS_fsm_state91;
wire   [0:0] tmp_22_fu_1982_p2;
reg   [0:0] tmp_22_reg_2674;
wire   [0:0] p_Result_36_fu_1988_p2;
reg   [0:0] p_Result_36_reg_2679;
wire  signed [55:0] tmp_V_12_fu_1999_p3;
reg  signed [55:0] tmp_V_12_reg_2685;
wire    ap_CS_fsm_state92;
wire   [31:0] tmp_32_fu_2075_p2;
reg   [31:0] tmp_32_reg_2690;
wire   [6:0] tmp_71_fu_2081_p1;
reg   [6:0] tmp_71_reg_2697;
wire   [10:0] tmp_81_fu_2085_p1;
reg   [10:0] tmp_81_reg_2702;
reg   [9:0] data_frame_address0;
reg    data_frame_ce0;
reg    data_frame_we0;
wire   [63:0] data_frame_q0;
reg   [9:0] hamming_window_address0;
reg    hamming_window_ce0;
reg    hamming_window_we0;
wire    grp_FFT_fu_568_to_FFT_read;
wire   [63:0] grp_FFT_fu_568_from_FFT_din;
wire    grp_FFT_fu_568_from_FFT_write;
wire    grp_FFT_fu_568_ap_start;
wire    grp_FFT_fu_568_ap_idle;
reg    grp_FFT_fu_568_ap_continue;
wire    grp_scaled_fixed2ieee_fu_576_ap_start;
wire    grp_scaled_fixed2ieee_fu_576_ap_idle;
wire   [63:0] grp_scaled_fixed2ieee_fu_576_ap_return;
reg   [10:0] i_reg_511;
wire    ap_CS_fsm_state76;
reg   [6:0] frame_reg_523;
wire   [0:0] exitcond1_fu_621_p2;
reg   [10:0] i1_reg_535;
wire    ap_CS_fsm_state85;
reg   [10:0] i2_reg_546;
wire    ap_CS_fsm_state88;
wire   [63:0] to_FFT_din;
wire    to_FFT_full_n;
reg    to_FFT_write;
reg   [9:0] j_reg_557;
wire    ap_CS_fsm_state93;
reg    grp_FFT_fu_568_ap_start_reg;
reg    ap_sync_reg_grp_FFT_fu_568_ap_ready;
reg    ap_sync_reg_grp_FFT_fu_568_ap_done;
wire   [63:0] to_FFT_dout;
wire    to_FFT_empty_n;
reg    to_FFT_read;
wire    from_FFT_full_n;
reg    from_FFT_write;
reg    grp_scaled_fixed2ieee_fu_576_ap_start_reg;
wire   [63:0] tmp_i2_i_i_fu_688_p1;
wire   [63:0] tmp_98_i_i_fu_1006_p1;
wire   [63:0] tmp_5_fu_1452_p1;
wire   [63:0] tmp_10_fu_1503_p1;
wire   [63:0] tmp_13_fu_1520_p1;
wire   [63:0] tmp_59_fu_2322_p1;
wire    ap_CS_fsm_state50;
reg   [63:0] grp_fu_587_p0;
reg   [63:0] grp_fu_587_p1;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state80;
reg   [63:0] grp_fu_593_p0;
reg   [63:0] grp_fu_593_p1;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state55;
reg   [31:0] grp_fu_599_p0;
wire   [63:0] p_Val2_s_fu_633_p1;
wire   [10:0] expv_op_i_fu_664_p2;
wire   [10:0] addr_V_fu_670_p3;
wire   [3:0] p_Result_i_i_i_fu_678_p4;
wire   [255:0] tmp_72_i_i_i_fu_704_p1;
wire   [255:0] r_V_22_fu_707_p2;
wire   [169:0] ret_V_11_fu_713_p4;
wire   [52:0] p_Result_27_fu_697_p3;
wire   [169:0] grp_fu_731_p0;
wire   [52:0] grp_fu_731_p1;
wire   [222:0] grp_fu_731_p2;
wire   [10:0] tmp_i_i_fu_762_p2;
wire   [0:0] tmp_25_fu_780_p1;
wire   [123:0] Mx_bits_V_1_fu_784_p2;
wire   [123:0] p_Val2_7_fu_789_p3;
wire   [60:0] p_Result_i3_i_i_fu_796_p4;
wire   [61:0] p_Result_28_fu_806_p3;
reg   [61:0] p_Result_10_fu_814_p4;
wire   [63:0] p_Result_29_fu_824_p3;
reg   [63:0] tmp_i5_i_i_fu_832_p3;
wire   [5:0] Mx_zeros_V_fu_840_p1;
wire   [123:0] tmp_89_i_i_fu_844_p1;
wire   [123:0] r_V_23_fu_848_p2;
wire   [10:0] storemerge_i_i_fu_767_p3;
wire   [10:0] tmp_92_i_i_fu_864_p1;
wire  signed [11:0] sh_i_cast_i_fu_892_p1;
wire   [11:0] tmp_94_i_i_fu_895_p2;
wire   [11:0] ush_fu_901_p3;
wire  signed [31:0] sh_assign_4_i_cast_i_fu_908_p1;
wire   [62:0] tmp_95_i_i_fu_912_p1;
wire   [62:0] r_V_6_fu_916_p2;
wire   [62:0] r_V_7_fu_921_p2;
wire   [62:0] r_V_24_fu_926_p3;
wire   [48:0] B_trunc_V_fu_968_p4;
wire   [48:0] r_V_25_fu_982_p0;
wire   [48:0] r_V_25_fu_982_p1;
wire   [97:0] r_V_25_fu_982_p2;
wire   [6:0] p_Result_i_i_fu_954_p4;
wire   [7:0] p_Result_30_fu_998_p3;
wire   [48:0] r_V_26_fu_1018_p0;
wire   [48:0] r_V_26_fu_1018_p1;
wire   [97:0] r_V_11_fu_1015_p1;
wire   [97:0] r_V_26_fu_1018_p2;
wire   [48:0] r_V_27_fu_1033_p0;
wire   [48:0] r_V_27_fu_1033_p1;
wire   [97:0] r_V_27_fu_1033_p2;
wire   [55:0] r_V_28_fu_1056_p0;
wire  signed [51:0] r_V_28_fu_1056_p1;
wire   [107:0] r_V_28_fu_1056_p2;
wire   [48:0] r_V_29_fu_1079_p0;
wire  signed [43:0] r_V_29_fu_1079_p1;
wire   [92:0] r_V_29_fu_1079_p2;
wire   [34:0] B_fourth_power_V_fu_1039_p4;
wire   [34:0] r_V_31_fu_1103_p0;
wire   [24:0] r_V_31_fu_1103_p1;
wire   [59:0] r_V_31_fu_1103_p2;
wire   [41:0] r_V_30_fu_1132_p0;
wire   [32:0] r_V_30_fu_1132_p1;
wire   [74:0] r_V_30_fu_1132_p2;
wire   [36:0] tmp_2_fu_1138_p4;
wire   [62:0] t1_V_fu_1119_p3;
wire  signed [63:0] lhs_V_2_fu_1152_p1;
wire  signed [63:0] rhs_V_2_fu_1156_p1;
wire   [37:0] tmp_81_i_i_fu_1148_p1;
wire   [37:0] rhs_V_3_i_cast_i_cas_fu_1162_p1;
wire   [37:0] tmp31_fu_1171_p2;
wire   [48:0] tmp31_cast_fu_1177_p1;
wire  signed [48:0] rhs_V_1_i_cast_i_cas_fu_1159_p1;
wire   [48:0] tmp30_fu_1181_p2;
wire  signed [63:0] tmp30_cast_fu_1187_p1;
wire   [63:0] tmp29_fu_1165_p2;
wire   [62:0] Mx_V_read_assign_fu_1203_p3;
wire  signed [63:0] r_V_32_fu_1216_p0;
wire   [62:0] r_V_32_fu_1216_p1;
wire   [125:0] r_V_32_fu_1216_p2;
wire   [10:0] Ex_V_ret_i_fu_1197_p3;
wire  signed [11:0] rhs_V_3_fu_1233_p1;
wire   [63:0] p_Val2_24_fu_1244_p1;
wire   [3:0] p_Result_32_fu_1270_p3;
wire   [0:0] tmp_28_fu_1276_p18;
wire   [0:0] tmp_31_fu_1314_p18;
wire   [0:0] tmp_73_i_fu_1352_p3;
wire   [0:0] tmp_77_i_fu_1368_p2;
wire   [0:0] not_tmp_i_fu_1363_p2;
wire   [0:0] p_Result_31_fu_1248_p3;
wire   [0:0] not_or_cond_i_demorg_fu_1381_p2;
wire   [0:0] p_Repl2_11_trunc_fu_1373_p3;
wire   [0:0] not_or_cond_i_fu_1385_p2;
wire   [0:0] or_cond_i_fu_1359_p2;
wire   [0:0] tmp_33_fu_1405_p2;
wire   [10:0] p_Result_i_fu_1397_p3;
wire   [10:0] tmp_V_10_fu_1256_p4;
wire   [0:0] not_or_cond_i3_fu_1418_p2;
wire   [51:0] p_Result_1_i_cast_fu_1424_p3;
wire   [51:0] tmp_V_11_fu_1266_p1;
wire   [63:0] p_Result_33_fu_1440_p4;
wire   [13:0] i1_cast_fu_1477_p1;
wire   [13:0] tmp_9_fu_1498_p2;
wire   [63:0] ireg_V_fu_1525_p1;
wire   [10:0] exp_tmp_V_fu_1541_p4;
wire   [51:0] tmp_45_fu_1555_p1;
wire   [52:0] tmp_15_fu_1559_p3;
wire   [53:0] p_Result_35_fu_1567_p1;
wire   [0:0] p_Result_34_fu_1533_p3;
wire   [53:0] man_V_1_fu_1571_p2;
wire   [62:0] tmp_37_fu_1529_p1;
wire   [11:0] tmp_14_fu_1551_p1;
wire   [11:0] F2_fu_1591_p2;
wire   [6:0] tmp_54_fu_1597_p4;
wire   [0:0] icmp_fu_1607_p2;
wire   [11:0] tmp_18_fu_1613_p2;
wire   [11:0] tmp_19_fu_1619_p2;
wire  signed [11:0] sh_amt_fu_1625_p3;
wire   [53:0] man_V_2_fu_1577_p3;
wire   [6:0] tmp_61_fu_1653_p4;
wire  signed [31:0] sh_amt_cast_fu_1633_p1;
wire   [53:0] tmp_29_fu_1669_p1;
wire   [53:0] tmp_34_fu_1673_p2;
wire   [0:0] tmp_63_fu_1683_p3;
wire   [31:0] tmp_60_fu_1643_p1;
wire   [0:0] tmp_16_fu_1585_p2;
wire   [0:0] tmp_20_fu_1637_p2;
wire   [0:0] sel_tmp1_fu_1705_p2;
wire   [0:0] sel_tmp6_demorgan_fu_1717_p2;
wire   [0:0] sel_tmp6_fu_1723_p2;
wire   [0:0] sel_tmp7_fu_1729_p2;
wire   [0:0] tmp_27_fu_1647_p2;
wire   [0:0] sel_tmp_fu_1741_p2;
wire   [0:0] sel_tmp21_demorgan_fu_1753_p2;
wire   [0:0] icmp9_fu_1663_p2;
wire   [0:0] sel_tmp4_fu_1759_p2;
wire   [0:0] sel_tmp5_fu_1765_p2;
wire   [31:0] tmp_36_fu_1699_p2;
wire   [31:0] tmp_35_fu_1691_p3;
wire   [0:0] sel_tmp3_fu_1747_p2;
wire   [0:0] sel_tmp8_fu_1735_p2;
wire   [31:0] tmp_62_fu_1679_p1;
wire   [0:0] sel_tmp2_fu_1711_p2;
wire   [0:0] or_cond_fu_1779_p2;
wire   [31:0] newSel_fu_1771_p3;
wire   [31:0] newSel1_fu_1785_p3;
wire   [0:0] or_cond1_fu_1793_p2;
wire   [0:0] or_cond2_fu_1807_p2;
wire   [31:0] newSel2_fu_1799_p3;
wire   [15:0] j_cast_fu_1837_p1;
wire   [31:0] r_V_fu_1872_p3;
wire  signed [31:0] r_V_33_fu_1890_p0;
wire  signed [63:0] r_V_2_fu_1886_p1;
wire  signed [31:0] r_V_33_fu_1890_p1;
wire   [31:0] r_V_1_fu_1879_p3;
wire  signed [31:0] r_V_34_fu_1900_p0;
wire  signed [63:0] r_V_4_fu_1896_p1;
wire  signed [31:0] r_V_34_fu_1900_p1;
wire   [63:0] r_V_33_fu_1890_p2;
wire   [63:0] r_V_34_fu_1900_p2;
wire  signed [64:0] rhs_V_fu_1910_p1;
wire  signed [64:0] lhs_V_fu_1906_p1;
wire   [64:0] ret_V_13_fu_1914_p2;
wire   [64:0] p_neg_fu_1928_p2;
wire   [54:0] tmp_39_fu_1934_p4;
wire   [55:0] p_lshr_cast_fu_1944_p1;
wire   [54:0] tmp_41_fu_1954_p4;
wire   [0:0] tmp_66_fu_1920_p3;
wire   [55:0] p_neg_t_fu_1948_p2;
wire   [55:0] p_lshr_f_cast_fu_1964_p1;
wire   [64:0] p_off_fu_1976_p2;
wire   [55:0] tmp_V_fu_1994_p2;
wire  signed [53:0] tmp_64_fu_2005_p4;
wire  signed [63:0] p_Result_5_fu_2015_p1;
reg   [63:0] tmp_24_fu_2019_p3;
wire   [1:0] tmp_68_fu_2037_p1;
wire   [63:0] p_Result_37_fu_2041_p3;
reg   [63:0] tmp_30_fu_2049_p3;
wire   [31:0] tmp_69_fu_2057_p1;
wire   [31:0] tmp_67_fu_2027_p1;
wire   [0:0] tmp_26_fu_2031_p2;
wire   [31:0] NZeros_fu_2061_p2;
wire   [31:0] l_fu_2067_p3;
wire   [31:0] lsb_index_fu_2092_p2;
wire   [30:0] tmp_70_fu_2097_p4;
wire   [6:0] tmp_72_fu_2113_p2;
wire   [65:0] tmp_73_fu_2118_p1;
wire  signed [65:0] tmp_V_4_cast_fu_2089_p1;
wire   [65:0] tmp_74_fu_2122_p2;
wire   [65:0] p_Result_25_fu_2128_p2;
wire   [0:0] icmp1_fu_2107_p2;
wire   [0:0] tmp_40_fu_2134_p2;
wire   [0:0] tmp_76_fu_2146_p3;
wire   [0:0] p_Result_3_fu_2160_p3;
wire   [0:0] rev_fu_2154_p2;
wire   [0:0] tmp_42_fu_2168_p2;
wire   [0:0] a_fu_2140_p2;
wire   [0:0] tmp_43_fu_2174_p2;
wire   [31:0] tmp_47_fu_2194_p2;
wire   [65:0] tmp_48_fu_2199_p1;
wire   [31:0] tmp_50_fu_2209_p2;
wire   [65:0] tmp_51_fu_2214_p1;
wire   [65:0] tmp_49_fu_2203_p2;
wire   [65:0] tmp_52_fu_2218_p2;
wire   [0:0] tmp_46_fu_2188_p2;
wire   [63:0] tmp_77_fu_2224_p1;
wire   [63:0] tmp_78_fu_2228_p1;
wire   [31:0] tmp_44_fu_2180_p3;
wire   [63:0] m_fu_2232_p3;
wire   [63:0] tmp_53_fu_2240_p1;
wire   [63:0] m_1_fu_2244_p2;
wire   [62:0] m_4_fu_2250_p4;
wire   [0:0] tmp_80_fu_2264_p3;
wire   [10:0] tmp_66_cast_cast_cas_fu_2272_p3;
wire   [10:0] tmp_55_fu_2280_p2;
wire   [10:0] p_Repl2_2_trunc_fu_2285_p2;
wire   [63:0] m_5_fu_2260_p1;
wire   [11:0] tmp_56_fu_2291_p3;
wire   [63:0] p_Result_38_fu_2298_p5;
wire   [63:0] tmp_57_fu_2310_p1;
reg   [92:0] ap_NS_fsm;
wire   [222:0] grp_fu_731_p00;
wire   [222:0] grp_fu_731_p10;
wire   [107:0] r_V_28_fu_1056_p00;
wire   [92:0] r_V_29_fu_1079_p00;
wire   [74:0] r_V_30_fu_1132_p00;
wire   [74:0] r_V_30_fu_1132_p10;
wire   [59:0] r_V_31_fu_1103_p00;
wire   [59:0] r_V_31_fu_1103_p10;
wire   [125:0] r_V_32_fu_1216_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 93'd1;
#0 grp_FFT_fu_568_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_FFT_fu_568_ap_ready = 1'b0;
#0 ap_sync_reg_grp_FFT_fu_568_ap_done = 1'b0;
#0 grp_scaled_fixed2ieee_fu_576_ap_start_reg = 1'b0;
end

window_FFT_ref_4oPi_table_256_V #(
    .DataWidth( 256 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
ref_4oPi_table_256_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ref_4oPi_table_256_V_address0),
    .ce0(ref_4oPi_table_256_V_ce0),
    .q0(ref_4oPi_table_256_V_q0)
);

window_FFT_fourth_order_double_4 #(
    .DataWidth( 59 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_4_address0),
    .ce0(fourth_order_double_4_ce0),
    .q0(fourth_order_double_4_q0)
);

window_FFT_fourth_order_double_5 #(
    .DataWidth( 52 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_5_address0),
    .ce0(fourth_order_double_5_ce0),
    .q0(fourth_order_double_5_q0)
);

window_FFT_fourth_order_double_6 #(
    .DataWidth( 44 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_6_address0),
    .ce0(fourth_order_double_6_ce0),
    .q0(fourth_order_double_6_q0)
);

window_FFT_fourth_order_double_7 #(
    .DataWidth( 33 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_7_address0),
    .ce0(fourth_order_double_7_ce0),
    .q0(fourth_order_double_7_q0)
);

window_FFT_fourth_order_double_s #(
    .DataWidth( 25 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_s_address0),
    .ce0(fourth_order_double_s_ce0),
    .q0(fourth_order_double_s_q0)
);

window_FFT_data_frame #(
    .DataWidth( 64 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
data_frame_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_frame_address0),
    .ce0(data_frame_ce0),
    .we0(data_frame_we0),
    .d0(reg_602),
    .q0(data_frame_q0)
);

window_FFT_data_frame #(
    .DataWidth( 64 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
hamming_window_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(hamming_window_address0),
    .ce0(hamming_window_ce0),
    .we0(hamming_window_we0),
    .d0(grp_fu_593_p2),
    .q0(hamming_window_q0)
);

FFT grp_FFT_fu_568(
    .to_FFT_dout(to_FFT_dout),
    .to_FFT_empty_n(to_FFT_empty_n),
    .to_FFT_read(grp_FFT_fu_568_to_FFT_read),
    .from_FFT_din(grp_FFT_fu_568_from_FFT_din),
    .from_FFT_full_n(from_FFT_full_n),
    .from_FFT_write(grp_FFT_fu_568_from_FFT_write),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_FFT_fu_568_ap_start),
    .ap_done(grp_FFT_fu_568_ap_done),
    .ap_ready(grp_FFT_fu_568_ap_ready),
    .ap_idle(grp_FFT_fu_568_ap_idle),
    .ap_continue(grp_FFT_fu_568_ap_continue)
);

scaled_fixed2ieee grp_scaled_fixed2ieee_fu_576(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_scaled_fixed2ieee_fu_576_ap_start),
    .ap_done(grp_scaled_fixed2ieee_fu_576_ap_done),
    .ap_idle(grp_scaled_fixed2ieee_fu_576_ap_idle),
    .ap_ready(grp_scaled_fixed2ieee_fu_576_ap_ready),
    .in_V(result_V_reg_2541),
    .prescale(ret_V_2_reg_2546),
    .ap_return(grp_scaled_fixed2ieee_fu_576_ap_return)
);

window_FFT_dsub_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
window_FFT_dsub_64ns_64ns_64_5_full_dsp_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(64'd4603039107142836552),
    .din1(reg_602),
    .ce(1'b1),
    .dout(grp_fu_582_p2)
);

window_FFT_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
window_FFT_dmul_64ns_64ns_64_5_max_dsp_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_587_p0),
    .din1(grp_fu_587_p1),
    .ce(1'b1),
    .dout(grp_fu_587_p2)
);

window_FFT_ddiv_64ns_64ns_64_22_1 #(
    .ID( 1 ),
    .NUM_STAGE( 22 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
window_FFT_ddiv_64ns_64ns_64_22_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_593_p0),
    .din1(grp_fu_593_p1),
    .ce(1'b1),
    .dout(grp_fu_593_p2)
);

window_FFT_sitodp_32ns_64_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
window_FFT_sitodp_32ns_64_4_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_599_p0),
    .ce(1'b1),
    .dout(grp_fu_599_p1)
);

window_FFT_mul_170ns_53ns_223_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 170 ),
    .din1_WIDTH( 53 ),
    .dout_WIDTH( 223 ))
window_FFT_mul_170ns_53ns_223_2_1_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_731_p0),
    .din1(grp_fu_731_p1),
    .ce(1'b1),
    .dout(grp_fu_731_p2)
);

window_FFT_mux_83_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
window_FFT_mux_83_1_1_1_U23(
    .din0(1'd0),
    .din1(1'd1),
    .din2(1'd1),
    .din3(1'd0),
    .din4(1'd0),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd0),
    .din8(p_Val2_34_reg_2420),
    .dout(sin_basis_fu_933_p10)
);

window_FFT_mux_164_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
window_FFT_mux_164_1_1_1_U24(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd1),
    .din3(1'd0),
    .din4(1'd1),
    .din5(1'd1),
    .din6(1'd0),
    .din7(1'd1),
    .din8(1'd1),
    .din9(1'd0),
    .din10(1'd1),
    .din11(1'd1),
    .din12(1'd0),
    .din13(1'd1),
    .din14(1'd0),
    .din15(1'd0),
    .din16(p_Result_32_fu_1270_p3),
    .dout(tmp_28_fu_1276_p18)
);

window_FFT_mux_164_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
window_FFT_mux_164_1_1_1_U25(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd0),
    .din3(1'd1),
    .din4(1'd1),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd0),
    .din8(1'd0),
    .din9(1'd1),
    .din10(1'd1),
    .din11(1'd1),
    .din12(1'd1),
    .din13(1'd0),
    .din14(1'd0),
    .din15(1'd0),
    .din16(p_Result_32_fu_1270_p3),
    .dout(tmp_31_fu_1314_p18)
);

fifo_w64_d1024_A_x from_FFT_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_FFT_fu_568_from_FFT_din),
    .if_full_n(from_FFT_full_n),
    .if_write(from_FFT_write),
    .if_dout(from_FFT_dout),
    .if_empty_n(from_FFT_empty_n),
    .if_read(from_FFT_read)
);

fifo_w64_d1024_A_x to_FFT_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(to_FFT_din),
    .if_full_n(to_FFT_full_n),
    .if_write(to_FFT_write),
    .if_dout(to_FFT_dout),
    .if_empty_n(to_FFT_empty_n),
    .if_read(to_FFT_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_FFT_fu_568_ap_done <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state89_on_subcall_done) & (1'b1 == ap_CS_fsm_state89))) begin
            ap_sync_reg_grp_FFT_fu_568_ap_done <= 1'b0;
        end else if ((grp_FFT_fu_568_ap_done == 1'b1)) begin
            ap_sync_reg_grp_FFT_fu_568_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_FFT_fu_568_ap_ready <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state89_on_subcall_done) & (1'b1 == ap_CS_fsm_state89))) begin
            ap_sync_reg_grp_FFT_fu_568_ap_ready <= 1'b0;
        end else if ((grp_FFT_fu_568_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_FFT_fu_568_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_FFT_fu_568_ap_start_reg <= 1'b0;
    end else begin
        if ((((ap_sync_grp_FFT_fu_568_ap_ready == 1'b0) & (1'b1 == ap_CS_fsm_state89)) | ((exitcond4_fu_1508_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state86)))) begin
            grp_FFT_fu_568_ap_start_reg <= 1'b1;
        end else if ((grp_FFT_fu_568_ap_ready == 1'b1)) begin
            grp_FFT_fu_568_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_scaled_fixed2ieee_fu_576_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state43)) begin
            grp_scaled_fixed2ieee_fu_576_ap_start_reg <= 1'b1;
        end else if ((grp_scaled_fixed2ieee_fu_576_ap_ready == 1'b1)) begin
            grp_scaled_fixed2ieee_fu_576_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_621_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        frame_reg_523 <= 7'd0;
    end else if ((~((from_FFT_empty_n == 1'b0) & (exitcond5_fu_1841_p2 == 1'd0)) & (exitcond5_fu_1841_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state90))) begin
        frame_reg_523 <= frame_1_reg_2579;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_1457_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state77))) begin
        i1_reg_535 <= 11'd0;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        i1_reg_535 <= i_3_reg_2592;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_1481_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state78))) begin
        i2_reg_546 <= 11'd0;
    end else if (((to_FFT_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state88))) begin
        i2_reg_546 <= i_4_reg_2625;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        i_reg_511 <= i_2_reg_2344;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        i_reg_511 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        j_reg_557 <= j_1_reg_2648;
    end else if (((1'b0 == ap_block_state89_on_subcall_done) & (1'b1 == ap_CS_fsm_state89))) begin
        j_reg_557 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        B_V_reg_2465 <= B_V_fu_964_p1;
        B_squared_V_reg_2475 <= {{r_V_25_fu_982_p2[97:49]}};
        r_V_9_reg_2470[48 : 0] <= r_V_9_fu_978_p1[48 : 0];
        sin_basis_reg_2458 <= sin_basis_fu_933_p10;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        B_third_power_V_reg_2506 <= {{r_V_26_fu_1018_p2[97:56]}};
        fourth_order_double_14_reg_2526 <= fourth_order_double_7_q0;
        p_Val2_16_reg_2511 <= fourth_order_double_4_q0;
        tmp_17_reg_2531 <= {{r_V_31_fu_1103_p2[59:31]}};
        tmp_77_i_i_reg_2516 <= {{r_V_28_fu_1056_p2[107:52]}};
        tmp_79_i_i_reg_2521 <= {{r_V_29_fu_1079_p2[92:45]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        Ex_V_reg_2433 <= Ex_V_fu_868_p2;
        Mx_V_reg_2426 <= {{r_V_23_fu_848_p2[123:61]}};
        isNeg_reg_2439 <= Ex_V_fu_868_p2[32'd10];
        p_Val2_34_reg_2420 <= p_Val2_34_fu_774_p3;
        tmp_74_i_reg_2445 <= tmp_74_i_fu_882_p2;
        tmp_76_i_reg_2451 <= tmp_76_i_fu_887_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        closepath_reg_2377 <= closepath_fu_658_p2;
        p_Result_s_reg_2359 <= p_Val2_s_fu_633_p1[32'd63];
        tmp_23_reg_2388 <= tmp_23_fu_693_p1;
        tmp_V_8_reg_2364 <= {{p_Val2_s_fu_633_p1[62:52]}};
        tmp_V_9_reg_2371 <= tmp_V_9_fu_654_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        frame_1_reg_2579 <= frame_1_fu_1463_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        hamming_window_load_reg_2617 <= hamming_window_q0;
        input_data_M_real_l_reg_2612 <= input_data_M_real_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_2_reg_2344 <= i_2_fu_627_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        i_3_reg_2592 <= i_3_fu_1487_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        i_4_reg_2625 <= i_4_fu_1514_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((from_FFT_empty_n == 1'b0) & (exitcond5_fu_1841_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state90))) begin
        j_1_reg_2648 <= j_1_fu_1847_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        newSel3_reg_2635 <= newSel3_fu_1813_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_scaled_fixed2ieee_fu_576_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state44))) begin
        p_Repl2_3_reg_2551 <= p_Repl2_3_fu_1391_p2;
        ret_V_10_reg_2561 <= ret_V_10_fu_1432_p3;
        ret_V_9_reg_2556 <= ret_V_9_fu_1410_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        p_Result_36_reg_2679 <= p_Result_36_fu_1988_p2;
        tmp_21_reg_2668 <= tmp_21_fu_1968_p3;
        tmp_22_reg_2674 <= tmp_22_fu_1982_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        p_Val2_33_reg_2409 <= {{grp_fu_731_p2[166:43]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state13))) begin
        reg_602 <= grp_fu_587_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        result_V_reg_2541 <= {{r_V_32_fu_1216_p2[125:63]}};
        ret_V_2_reg_2546 <= ret_V_2_fu_1237_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        ret_V_reg_2536 <= ret_V_fu_1191_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        scaling_reg_2331 <= grp_fu_599_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state89_on_subcall_done) & (1'b1 == ap_CS_fsm_state89))) begin
        tmp_12_reg_2640[15 : 9] <= tmp_12_fu_1829_p3[15 : 9];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_22_reg_2674 == 1'd1) & (1'b1 == ap_CS_fsm_state92))) begin
        tmp_32_reg_2690 <= tmp_32_fu_2075_p2;
        tmp_71_reg_2697 <= tmp_71_fu_2081_p1;
        tmp_81_reg_2702 <= tmp_81_fu_2085_p1;
        tmp_V_12_reg_2685 <= tmp_V_12_fu_1999_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((from_FFT_empty_n == 1'b0) & (exitcond5_fu_1841_p2 == 1'd0)) & (exitcond5_fu_1841_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state90))) begin
        tmp_38_reg_2658 <= {{from_FFT_dout[53:32]}};
        tmp_58_reg_2663 <= tmp_58_fu_1867_p2;
        tmp_65_reg_2653 <= tmp_65_fu_1853_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        tmp_3_reg_2571 <= grp_fu_582_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_1457_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state77))) begin
        tmp_6_reg_2584[13 : 7] <= tmp_6_fu_1469_p3[13 : 7];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        tmp_75_i_reg_2403 <= tmp_75_i_fu_737_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_7_reg_2349 <= grp_fu_599_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((closepath_reg_2377 == 1'd0) & (1'b1 == ap_CS_fsm_state38))) begin
        tmp_86_i_i_reg_2415 <= {{grp_fu_731_p2[169:167]}};
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_1481_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state78))) begin
        tmp_s_reg_2597[10 : 0] <= tmp_s_fu_1493_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        x_assign_reg_2354 <= grp_fu_593_p2;
    end
end

always @ (*) begin
    if (((exitcond2_fu_1457_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state77))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond2_fu_1457_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state77))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        data_frame_address0 = tmp_13_fu_1520_p1;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        data_frame_address0 = tmp_s_reg_2597;
    end else begin
        data_frame_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state86))) begin
        data_frame_ce0 = 1'b1;
    end else begin
        data_frame_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        data_frame_we0 = 1'b1;
    end else begin
        data_frame_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        fourth_order_double_4_ce0 = 1'b1;
    end else begin
        fourth_order_double_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        fourth_order_double_5_ce0 = 1'b1;
    end else begin
        fourth_order_double_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        fourth_order_double_6_ce0 = 1'b1;
    end else begin
        fourth_order_double_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        fourth_order_double_7_ce0 = 1'b1;
    end else begin
        fourth_order_double_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        fourth_order_double_s_ce0 = 1'b1;
    end else begin
        fourth_order_double_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((from_FFT_empty_n == 1'b0) & (exitcond5_fu_1841_p2 == 1'd0)) & (exitcond5_fu_1841_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state90))) begin
        from_FFT_read = 1'b1;
    end else begin
        from_FFT_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        from_FFT_write = grp_FFT_fu_568_from_FFT_write;
    end else begin
        from_FFT_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state89_on_subcall_done) & (1'b1 == ap_CS_fsm_state89))) begin
        grp_FFT_fu_568_ap_continue = 1'b1;
    end else begin
        grp_FFT_fu_568_ap_continue = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        grp_fu_587_p0 = input_data_M_real_l_reg_2612;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_587_p0 = ret_i_i_i_fu_1447_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_587_p0 = tmp_7_reg_2349;
    end else begin
        grp_fu_587_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        grp_fu_587_p1 = hamming_window_load_reg_2617;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_587_p1 = 64'd4601958243232267633;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_587_p1 = 64'd4618760256179214148;
    end else begin
        grp_fu_587_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_593_p0 = tmp_3_reg_2571;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_593_p0 = reg_602;
    end else begin
        grp_fu_593_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_593_p1 = scaling_reg_2331;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_593_p1 = 64'd4652209618980700160;
    end else begin
        grp_fu_593_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_599_p0 = i_cast_fu_616_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_599_p0 = tmp_fu_609_p2;
    end else begin
        grp_fu_599_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        hamming_window_address0 = tmp_s_fu_1493_p1;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        hamming_window_address0 = tmp_5_fu_1452_p1;
    end else begin
        hamming_window_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state78))) begin
        hamming_window_ce0 = 1'b1;
    end else begin
        hamming_window_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        hamming_window_we0 = 1'b1;
    end else begin
        hamming_window_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        input_data_M_real_ce0 = 1'b1;
    end else begin
        input_data_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        output_data_ce0 = 1'b1;
    end else begin
        output_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        output_data_we0 = 1'b1;
    end else begin
        output_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        ref_4oPi_table_256_V_ce0 = 1'b1;
    end else begin
        ref_4oPi_table_256_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        to_FFT_read = grp_FFT_fu_568_to_FFT_read;
    end else begin
        to_FFT_read = 1'b0;
    end
end

always @ (*) begin
    if (((to_FFT_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state88))) begin
        to_FFT_write = 1'b1;
    end else begin
        to_FFT_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((exitcond1_fu_621_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            if (((grp_scaled_fixed2ieee_fu_576_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state44))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state77 : begin
            if (((exitcond2_fu_1457_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state77))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end
        end
        ap_ST_fsm_state78 : begin
            if (((exitcond3_fu_1481_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state78))) begin
                ap_NS_fsm = ap_ST_fsm_state86;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state86 : begin
            if (((exitcond4_fu_1508_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state86))) begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            if (((to_FFT_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state88))) begin
                ap_NS_fsm = ap_ST_fsm_state86;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end
        end
        ap_ST_fsm_state89 : begin
            if (((1'b0 == ap_block_state89_on_subcall_done) & (1'b1 == ap_CS_fsm_state89))) begin
                ap_NS_fsm = ap_ST_fsm_state90;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end
        end
        ap_ST_fsm_state90 : begin
            if ((~((from_FFT_empty_n == 1'b0) & (exitcond5_fu_1841_p2 == 1'd0)) & (exitcond5_fu_1841_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state90))) begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end else if ((~((from_FFT_empty_n == 1'b0) & (exitcond5_fu_1841_p2 == 1'd0)) & (exitcond5_fu_1841_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state90))) begin
                ap_NS_fsm = ap_ST_fsm_state91;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state90;
            end
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign B_V_fu_964_p1 = r_V_24_fu_926_p3[55:0];

assign B_fourth_power_V_fu_1039_p4 = {{r_V_27_fu_1033_p2[97:63]}};

assign B_trunc_V_fu_968_p4 = {{r_V_24_fu_926_p3[55:7]}};

assign Ex_V_fu_868_p2 = (storemerge_i_i_fu_767_p3 - tmp_92_i_i_fu_864_p1);

assign Ex_V_ret_i_fu_1197_p3 = ((sin_basis_reg_2458[0:0] === 1'b1) ? Ex_V_reg_2433 : 11'd0);

assign F2_fu_1591_p2 = (12'd1075 - tmp_14_fu_1551_p1);

assign Mx_V_read_assign_fu_1203_p3 = ((sin_basis_reg_2458[0:0] === 1'b1) ? Mx_V_reg_2426 : 63'd9223372036854775807);

assign Mx_bits_V_1_fu_784_p2 = (124'd0 - p_Val2_33_reg_2409);

assign Mx_zeros_V_fu_840_p1 = tmp_i5_i_i_fu_832_p3[5:0];

assign NZeros_fu_2061_p2 = (tmp_69_fu_2057_p1 + tmp_67_fu_2027_p1);

assign a_fu_2140_p2 = (tmp_40_fu_2134_p2 & icmp1_fu_2107_p2);

assign addr_V_fu_670_p3 = ((closepath_fu_658_p2[0:0] === 1'b1) ? 11'd74 : expv_op_i_fu_664_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

always @ (*) begin
    ap_block_state89_on_subcall_done = ((ap_sync_grp_FFT_fu_568_ap_ready & ap_sync_grp_FFT_fu_568_ap_done) == 1'b0);
end

always @ (*) begin
    ap_block_state90 = ((from_FFT_empty_n == 1'b0) & (exitcond5_fu_1841_p2 == 1'd0));
end

assign ap_sync_grp_FFT_fu_568_ap_done = (grp_FFT_fu_568_ap_done | ap_sync_reg_grp_FFT_fu_568_ap_done);

assign ap_sync_grp_FFT_fu_568_ap_ready = (grp_FFT_fu_568_ap_ready | ap_sync_reg_grp_FFT_fu_568_ap_ready);

assign closepath_fu_658_p2 = ((tmp_V_8_fu_644_p4 < 11'd1022) ? 1'b1 : 1'b0);

assign exitcond1_fu_621_p2 = ((i_reg_511 == 11'd1024) ? 1'b1 : 1'b0);

assign exitcond2_fu_1457_p2 = ((frame_reg_523 == 7'd118) ? 1'b1 : 1'b0);

assign exitcond3_fu_1481_p2 = ((i1_reg_535 == 11'd1024) ? 1'b1 : 1'b0);

assign exitcond4_fu_1508_p2 = ((i2_reg_546 == 11'd1024) ? 1'b1 : 1'b0);

assign exitcond5_fu_1841_p2 = ((j_reg_557 == 10'd512) ? 1'b1 : 1'b0);

assign exp_tmp_V_fu_1541_p4 = {{ireg_V_fu_1525_p1[62:52]}};

assign expv_op_i_fu_664_p2 = ($signed(11'd1101) + $signed(tmp_V_8_fu_644_p4));

assign fourth_order_double_4_address0 = tmp_98_i_i_fu_1006_p1;

assign fourth_order_double_5_address0 = tmp_98_i_i_fu_1006_p1;

assign fourth_order_double_6_address0 = tmp_98_i_i_fu_1006_p1;

assign fourth_order_double_7_address0 = tmp_98_i_i_fu_1006_p1;

assign fourth_order_double_s_address0 = tmp_98_i_i_fu_1006_p1;

assign frame_1_fu_1463_p2 = (frame_reg_523 + 7'd1);

assign grp_FFT_fu_568_ap_start = grp_FFT_fu_568_ap_start_reg;

assign grp_fu_731_p0 = grp_fu_731_p00;

assign grp_fu_731_p00 = ret_V_11_fu_713_p4;

assign grp_fu_731_p1 = grp_fu_731_p10;

assign grp_fu_731_p10 = p_Result_27_fu_697_p3;

assign grp_scaled_fixed2ieee_fu_576_ap_start = grp_scaled_fixed2ieee_fu_576_ap_start_reg;

assign i1_cast_fu_1477_p1 = i1_reg_535;

assign i_2_fu_627_p2 = (i_reg_511 + 11'd1);

assign i_3_fu_1487_p2 = (i1_reg_535 + 11'd1);

assign i_4_fu_1514_p2 = (i2_reg_546 + 11'd1);

assign i_cast_fu_616_p1 = i_reg_511;

assign icmp1_fu_2107_p2 = (($signed(tmp_70_fu_2097_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp9_fu_1663_p2 = ((tmp_61_fu_1653_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_fu_1607_p2 = (($signed(tmp_54_fu_1597_p4) > $signed(7'd0)) ? 1'b1 : 1'b0);

assign input_data_M_imag_address0 = 14'd0;

assign input_data_M_imag_address1 = 14'd0;

assign input_data_M_imag_ce0 = 1'b0;

assign input_data_M_imag_ce1 = 1'b0;

assign input_data_M_imag_d0 = 64'd0;

assign input_data_M_imag_d1 = 64'd0;

assign input_data_M_imag_we0 = 1'b0;

assign input_data_M_imag_we1 = 1'b0;

assign input_data_M_real_address0 = tmp_10_fu_1503_p1;

assign ireg_V_fu_1525_p1 = data_frame_q0;

assign j_1_fu_1847_p2 = (j_reg_557 + 10'd1);

assign j_cast_fu_1837_p1 = j_reg_557;

assign l_fu_2067_p3 = ((tmp_26_fu_2031_p2[0:0] === 1'b1) ? NZeros_fu_2061_p2 : tmp_67_fu_2027_p1);

assign lhs_V_2_fu_1152_p1 = $signed(t1_V_fu_1119_p3);

assign lhs_V_fu_1906_p1 = $signed(r_V_33_fu_1890_p2);

assign lsb_index_fu_2092_p2 = ($signed(32'd4294967243) + $signed(tmp_32_reg_2690));

assign m_1_fu_2244_p2 = (m_fu_2232_p3 + tmp_53_fu_2240_p1);

assign m_4_fu_2250_p4 = {{m_1_fu_2244_p2[63:1]}};

assign m_5_fu_2260_p1 = m_4_fu_2250_p4;

assign m_fu_2232_p3 = ((tmp_46_fu_2188_p2[0:0] === 1'b1) ? tmp_77_fu_2224_p1 : tmp_78_fu_2228_p1);

assign man_V_1_fu_1571_p2 = (54'd0 - p_Result_35_fu_1567_p1);

assign man_V_2_fu_1577_p3 = ((p_Result_34_fu_1533_p3[0:0] === 1'b1) ? man_V_1_fu_1571_p2 : p_Result_35_fu_1567_p1);

assign newSel1_fu_1785_p3 = ((sel_tmp8_fu_1735_p2[0:0] === 1'b1) ? tmp_62_fu_1679_p1 : tmp_60_fu_1643_p1);

assign newSel2_fu_1799_p3 = ((or_cond_fu_1779_p2[0:0] === 1'b1) ? newSel_fu_1771_p3 : newSel1_fu_1785_p3);

assign newSel3_fu_1813_p3 = ((or_cond2_fu_1807_p2[0:0] === 1'b1) ? newSel2_fu_1799_p3 : 32'd0);

assign newSel_fu_1771_p3 = ((sel_tmp5_fu_1765_p2[0:0] === 1'b1) ? tmp_36_fu_1699_p2 : tmp_35_fu_1691_p3);

assign not_or_cond_i3_fu_1418_p2 = (or_cond_i_fu_1359_p2 ^ 1'd1);

assign not_or_cond_i_demorg_fu_1381_p2 = (tmp_75_i_reg_2403 & tmp_74_i_reg_2445);

assign not_or_cond_i_fu_1385_p2 = (not_or_cond_i_demorg_fu_1381_p2 ^ 1'd1);

assign not_tmp_i_fu_1363_p2 = (tmp_76_i_reg_2451 ^ 1'd1);

assign or_cond1_fu_1793_p2 = (sel_tmp8_fu_1735_p2 | sel_tmp2_fu_1711_p2);

assign or_cond2_fu_1807_p2 = (or_cond_fu_1779_p2 | or_cond1_fu_1793_p2);

assign or_cond_fu_1779_p2 = (sel_tmp5_fu_1765_p2 | sel_tmp3_fu_1747_p2);

assign or_cond_i_fu_1359_p2 = (tmp_75_i_reg_2403 & tmp_74_i_reg_2445);

assign output_data_address0 = tmp_59_fu_2322_p1;

assign output_data_d0 = ((tmp_22_reg_2674[0:0] === 1'b1) ? tmp_57_fu_2310_p1 : 64'd0);

assign p_Repl2_11_trunc_fu_1373_p3 = ((tmp_77_i_fu_1368_p2[0:0] === 1'b1) ? not_tmp_i_fu_1363_p2 : p_Result_31_fu_1248_p3);

assign p_Repl2_2_trunc_fu_2285_p2 = (tmp_66_cast_cast_cas_fu_2272_p3 + tmp_55_fu_2280_p2);

assign p_Repl2_3_fu_1391_p2 = (p_Repl2_11_trunc_fu_1373_p3 & not_or_cond_i_fu_1385_p2);

integer ap_tvar_int_0;

always @ (p_Result_28_fu_806_p3) begin
    for (ap_tvar_int_0 = 62 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 61 - 0) begin
            p_Result_10_fu_814_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_10_fu_814_p4[ap_tvar_int_0] = p_Result_28_fu_806_p3[61 - ap_tvar_int_0];
        end
    end
end

assign p_Result_1_i_cast_fu_1424_p3 = ((not_or_cond_i3_fu_1418_p2[0:0] === 1'b1) ? 52'd4503599627370495 : 52'd0);

assign p_Result_25_fu_2128_p2 = (tmp_V_4_cast_fu_2089_p1 & tmp_74_fu_2122_p2);

assign p_Result_27_fu_697_p3 = {{1'd1}, {tmp_V_9_reg_2371}};

assign p_Result_28_fu_806_p3 = {{p_Result_i3_i_i_fu_796_p4}, {1'd1}};

assign p_Result_29_fu_824_p3 = {{2'd3}, {p_Result_10_fu_814_p4}};

assign p_Result_30_fu_998_p3 = {{sin_basis_fu_933_p10}, {p_Result_i_i_fu_954_p4}};

assign p_Result_31_fu_1248_p3 = p_Val2_24_fu_1244_p1[32'd63];

assign p_Result_32_fu_1270_p3 = {{p_Result_s_reg_2359}, {p_Val2_34_reg_2420}};

assign p_Result_33_fu_1440_p4 = {{{p_Repl2_3_reg_2551}, {ret_V_9_reg_2556}}, {ret_V_10_reg_2561}};

assign p_Result_34_fu_1533_p3 = ireg_V_fu_1525_p1[32'd63];

assign p_Result_35_fu_1567_p1 = tmp_15_fu_1559_p3;

assign p_Result_36_fu_1988_p2 = (($signed(ret_V_13_fu_1914_p2) < $signed(65'd36893488147419102209)) ? 1'b1 : 1'b0);

assign p_Result_37_fu_2041_p3 = {{tmp_68_fu_2037_p1}, {62'd4611686018427387903}};

assign p_Result_38_fu_2298_p5 = {{tmp_56_fu_2291_p3}, {m_5_fu_2260_p1[51:0]}};

assign p_Result_3_fu_2160_p3 = tmp_V_4_cast_fu_2089_p1[lsb_index_fu_2092_p2];

assign p_Result_5_fu_2015_p1 = tmp_64_fu_2005_p4;

assign p_Result_i3_i_i_fu_796_p4 = {{p_Val2_7_fu_789_p3[123:63]}};

assign p_Result_i_fu_1397_p3 = ((or_cond_i_fu_1359_p2[0:0] === 1'b1) ? 11'd1023 : 11'd2047);

assign p_Result_i_i_fu_954_p4 = {{r_V_24_fu_926_p3[62:56]}};

assign p_Result_i_i_i_fu_678_p4 = {{addr_V_fu_670_p3[10:7]}};

assign p_Val2_24_fu_1244_p1 = grp_scaled_fixed2ieee_fu_576_ap_return;

assign p_Val2_34_fu_774_p3 = ((closepath_reg_2377[0:0] === 1'b1) ? 3'd0 : tmp_86_i_i_reg_2415);

assign p_Val2_7_fu_789_p3 = ((tmp_25_fu_780_p1[0:0] === 1'b1) ? Mx_bits_V_1_fu_784_p2 : p_Val2_33_reg_2409);

assign p_Val2_s_fu_633_p1 = x_assign_reg_2354;

assign p_lshr_cast_fu_1944_p1 = tmp_39_fu_1934_p4;

assign p_lshr_f_cast_fu_1964_p1 = tmp_41_fu_1954_p4;

assign p_neg_fu_1928_p2 = (65'd0 - ret_V_13_fu_1914_p2);

assign p_neg_t_fu_1948_p2 = (56'd0 - p_lshr_cast_fu_1944_p1);

assign p_off_fu_1976_p2 = (ret_V_13_fu_1914_p2 | 65'd1023);

assign r_V_11_fu_1015_p1 = B_squared_V_reg_2475;

assign r_V_1_fu_1879_p3 = {{tmp_38_reg_2658}, {10'd0}};

assign r_V_22_fu_707_p2 = ref_4oPi_table_256_V_q0 << tmp_72_i_i_i_fu_704_p1;

assign r_V_23_fu_848_p2 = p_Val2_7_fu_789_p3 << tmp_89_i_i_fu_844_p1;

assign r_V_24_fu_926_p3 = ((isNeg_reg_2439[0:0] === 1'b1) ? r_V_6_fu_916_p2 : r_V_7_fu_921_p2);

assign r_V_25_fu_982_p0 = r_V_9_fu_978_p1;

assign r_V_25_fu_982_p1 = r_V_9_fu_978_p1;

assign r_V_25_fu_982_p2 = (r_V_25_fu_982_p0 * r_V_25_fu_982_p1);

assign r_V_26_fu_1018_p0 = r_V_9_reg_2470;

assign r_V_26_fu_1018_p1 = r_V_11_fu_1015_p1;

assign r_V_26_fu_1018_p2 = (r_V_26_fu_1018_p0 * r_V_26_fu_1018_p1);

assign r_V_27_fu_1033_p0 = r_V_11_fu_1015_p1;

assign r_V_27_fu_1033_p1 = r_V_11_fu_1015_p1;

assign r_V_27_fu_1033_p2 = (r_V_27_fu_1033_p0 * r_V_27_fu_1033_p1);

assign r_V_28_fu_1056_p0 = r_V_28_fu_1056_p00;

assign r_V_28_fu_1056_p00 = B_V_reg_2465;

assign r_V_28_fu_1056_p1 = fourth_order_double_5_q0;

assign r_V_28_fu_1056_p2 = ($signed({{1'b0}, {r_V_28_fu_1056_p0}}) * $signed(r_V_28_fu_1056_p1));

assign r_V_29_fu_1079_p0 = r_V_29_fu_1079_p00;

assign r_V_29_fu_1079_p00 = B_squared_V_reg_2475;

assign r_V_29_fu_1079_p1 = fourth_order_double_6_q0;

assign r_V_29_fu_1079_p2 = ($signed({{1'b0}, {r_V_29_fu_1079_p0}}) * $signed(r_V_29_fu_1079_p1));

assign r_V_2_fu_1886_p1 = $signed(r_V_fu_1872_p3);

assign r_V_30_fu_1132_p0 = r_V_30_fu_1132_p00;

assign r_V_30_fu_1132_p00 = B_third_power_V_reg_2506;

assign r_V_30_fu_1132_p1 = r_V_30_fu_1132_p10;

assign r_V_30_fu_1132_p10 = fourth_order_double_14_reg_2526;

assign r_V_30_fu_1132_p2 = (r_V_30_fu_1132_p0 * r_V_30_fu_1132_p1);

assign r_V_31_fu_1103_p0 = r_V_31_fu_1103_p00;

assign r_V_31_fu_1103_p00 = B_fourth_power_V_fu_1039_p4;

assign r_V_31_fu_1103_p1 = r_V_31_fu_1103_p10;

assign r_V_31_fu_1103_p10 = fourth_order_double_s_q0;

assign r_V_31_fu_1103_p2 = (r_V_31_fu_1103_p0 * r_V_31_fu_1103_p1);

assign r_V_32_fu_1216_p0 = ret_V_reg_2536;

assign r_V_32_fu_1216_p1 = r_V_32_fu_1216_p10;

assign r_V_32_fu_1216_p10 = Mx_V_read_assign_fu_1203_p3;

assign r_V_32_fu_1216_p2 = ($signed(r_V_32_fu_1216_p0) * $signed({{1'b0}, {r_V_32_fu_1216_p1}}));

assign r_V_33_fu_1890_p0 = r_V_2_fu_1886_p1;

assign r_V_33_fu_1890_p1 = r_V_2_fu_1886_p1;

assign r_V_33_fu_1890_p2 = ($signed(r_V_33_fu_1890_p0) * $signed(r_V_33_fu_1890_p1));

assign r_V_34_fu_1900_p0 = r_V_4_fu_1896_p1;

assign r_V_34_fu_1900_p1 = r_V_4_fu_1896_p1;

assign r_V_34_fu_1900_p2 = ($signed(r_V_34_fu_1900_p0) * $signed(r_V_34_fu_1900_p1));

assign r_V_4_fu_1896_p1 = $signed(r_V_1_fu_1879_p3);

assign r_V_6_fu_916_p2 = Mx_V_reg_2426 >> tmp_95_i_i_fu_912_p1;

assign r_V_7_fu_921_p2 = Mx_V_reg_2426 << tmp_95_i_i_fu_912_p1;

assign r_V_9_fu_978_p1 = B_trunc_V_fu_968_p4;

assign r_V_fu_1872_p3 = {{tmp_65_reg_2653}, {10'd0}};

assign ref_4oPi_table_256_V_address0 = tmp_i2_i_i_fu_688_p1;

assign ret_V_10_fu_1432_p3 = ((tmp_33_fu_1405_p2[0:0] === 1'b1) ? p_Result_1_i_cast_fu_1424_p3 : tmp_V_11_fu_1266_p1);

assign ret_V_11_fu_713_p4 = {{r_V_22_fu_707_p2[255:86]}};

assign ret_V_13_fu_1914_p2 = ($signed(rhs_V_fu_1910_p1) + $signed(lhs_V_fu_1906_p1));

assign ret_V_2_fu_1237_p2 = ($signed(12'd0) - $signed(rhs_V_3_fu_1233_p1));

assign ret_V_9_fu_1410_p3 = ((tmp_33_fu_1405_p2[0:0] === 1'b1) ? p_Result_i_fu_1397_p3 : tmp_V_10_fu_1256_p4);

assign ret_V_fu_1191_p2 = ($signed(tmp30_cast_fu_1187_p1) + $signed(tmp29_fu_1165_p2));

assign ret_i_i_i_fu_1447_p1 = p_Result_33_fu_1440_p4;

assign rev_fu_2154_p2 = (tmp_76_fu_2146_p3 ^ 1'd1);

assign rhs_V_1_i_cast_i_cas_fu_1159_p1 = $signed(tmp_79_i_i_reg_2521);

assign rhs_V_2_fu_1156_p1 = $signed(tmp_77_i_i_reg_2516);

assign rhs_V_3_fu_1233_p1 = $signed(Ex_V_ret_i_fu_1197_p3);

assign rhs_V_3_i_cast_i_cas_fu_1162_p1 = tmp_17_reg_2531;

assign rhs_V_fu_1910_p1 = $signed(r_V_34_fu_1900_p2);

assign sel_tmp1_fu_1705_p2 = (tmp_16_fu_1585_p2 ^ 1'd1);

assign sel_tmp21_demorgan_fu_1753_p2 = (sel_tmp6_demorgan_fu_1717_p2 | icmp_fu_1607_p2);

assign sel_tmp2_fu_1711_p2 = (tmp_20_fu_1637_p2 & sel_tmp1_fu_1705_p2);

assign sel_tmp3_fu_1747_p2 = (sel_tmp_fu_1741_p2 & sel_tmp7_fu_1729_p2);

assign sel_tmp4_fu_1759_p2 = (sel_tmp21_demorgan_fu_1753_p2 ^ 1'd1);

assign sel_tmp5_fu_1765_p2 = (sel_tmp4_fu_1759_p2 & icmp9_fu_1663_p2);

assign sel_tmp6_demorgan_fu_1717_p2 = (tmp_20_fu_1637_p2 | tmp_16_fu_1585_p2);

assign sel_tmp6_fu_1723_p2 = (sel_tmp6_demorgan_fu_1717_p2 ^ 1'd1);

assign sel_tmp7_fu_1729_p2 = (sel_tmp6_fu_1723_p2 & icmp_fu_1607_p2);

assign sel_tmp8_fu_1735_p2 = (tmp_27_fu_1647_p2 & sel_tmp7_fu_1729_p2);

assign sel_tmp_fu_1741_p2 = (tmp_27_fu_1647_p2 ^ 1'd1);

assign sh_amt_cast_fu_1633_p1 = sh_amt_fu_1625_p3;

assign sh_amt_fu_1625_p3 = ((icmp_fu_1607_p2[0:0] === 1'b1) ? tmp_18_fu_1613_p2 : tmp_19_fu_1619_p2);

assign sh_assign_4_i_cast_i_fu_908_p1 = $signed(ush_fu_901_p3);

assign sh_i_cast_i_fu_892_p1 = Ex_V_reg_2433;

assign storemerge_i_i_fu_767_p3 = ((closepath_reg_2377[0:0] === 1'b1) ? tmp_i_i_fu_762_p2 : 11'd0);

assign t1_V_fu_1119_p3 = {{p_Val2_16_reg_2511}, {4'd0}};

assign tmp29_fu_1165_p2 = ($signed(lhs_V_2_fu_1152_p1) + $signed(rhs_V_2_fu_1156_p1));

assign tmp30_cast_fu_1187_p1 = $signed(tmp30_fu_1181_p2);

assign tmp30_fu_1181_p2 = ($signed(tmp31_cast_fu_1177_p1) + $signed(rhs_V_1_i_cast_i_cas_fu_1159_p1));

assign tmp31_cast_fu_1177_p1 = tmp31_fu_1171_p2;

assign tmp31_fu_1171_p2 = (tmp_81_i_i_fu_1148_p1 + rhs_V_3_i_cast_i_cas_fu_1162_p1);

assign tmp_10_fu_1503_p1 = tmp_9_fu_1498_p2;

assign tmp_12_fu_1829_p3 = {{frame_reg_523}, {9'd0}};

assign tmp_13_fu_1520_p1 = i2_reg_546;

assign tmp_14_fu_1551_p1 = exp_tmp_V_fu_1541_p4;

assign tmp_15_fu_1559_p3 = {{1'd1}, {tmp_45_fu_1555_p1}};

assign tmp_16_fu_1585_p2 = ((tmp_37_fu_1529_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_18_fu_1613_p2 = ($signed(12'd4065) + $signed(F2_fu_1591_p2));

assign tmp_19_fu_1619_p2 = (12'd31 - F2_fu_1591_p2);

assign tmp_20_fu_1637_p2 = ((F2_fu_1591_p2 == 12'd31) ? 1'b1 : 1'b0);

assign tmp_21_fu_1968_p3 = ((tmp_66_fu_1920_p3[0:0] === 1'b1) ? p_neg_t_fu_1948_p2 : p_lshr_f_cast_fu_1964_p1);

assign tmp_22_fu_1982_p2 = ((p_off_fu_1976_p2 > 65'd2046) ? 1'b1 : 1'b0);

assign tmp_23_fu_693_p1 = addr_V_fu_670_p3[6:0];

always @ (p_Result_5_fu_2015_p1) begin
    if (p_Result_5_fu_2015_p1[63] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd0;
    end else if (p_Result_5_fu_2015_p1[62] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd1;
    end else if (p_Result_5_fu_2015_p1[61] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd2;
    end else if (p_Result_5_fu_2015_p1[60] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd3;
    end else if (p_Result_5_fu_2015_p1[59] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd4;
    end else if (p_Result_5_fu_2015_p1[58] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd5;
    end else if (p_Result_5_fu_2015_p1[57] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd6;
    end else if (p_Result_5_fu_2015_p1[56] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd7;
    end else if (p_Result_5_fu_2015_p1[55] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd8;
    end else if (p_Result_5_fu_2015_p1[54] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd9;
    end else if (p_Result_5_fu_2015_p1[53] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd10;
    end else if (p_Result_5_fu_2015_p1[52] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd11;
    end else if (p_Result_5_fu_2015_p1[51] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd12;
    end else if (p_Result_5_fu_2015_p1[50] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd13;
    end else if (p_Result_5_fu_2015_p1[49] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd14;
    end else if (p_Result_5_fu_2015_p1[48] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd15;
    end else if (p_Result_5_fu_2015_p1[47] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd16;
    end else if (p_Result_5_fu_2015_p1[46] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd17;
    end else if (p_Result_5_fu_2015_p1[45] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd18;
    end else if (p_Result_5_fu_2015_p1[44] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd19;
    end else if (p_Result_5_fu_2015_p1[43] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd20;
    end else if (p_Result_5_fu_2015_p1[42] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd21;
    end else if (p_Result_5_fu_2015_p1[41] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd22;
    end else if (p_Result_5_fu_2015_p1[40] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd23;
    end else if (p_Result_5_fu_2015_p1[39] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd24;
    end else if (p_Result_5_fu_2015_p1[38] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd25;
    end else if (p_Result_5_fu_2015_p1[37] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd26;
    end else if (p_Result_5_fu_2015_p1[36] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd27;
    end else if (p_Result_5_fu_2015_p1[35] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd28;
    end else if (p_Result_5_fu_2015_p1[34] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd29;
    end else if (p_Result_5_fu_2015_p1[33] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd30;
    end else if (p_Result_5_fu_2015_p1[32] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd31;
    end else if (p_Result_5_fu_2015_p1[31] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd32;
    end else if (p_Result_5_fu_2015_p1[30] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd33;
    end else if (p_Result_5_fu_2015_p1[29] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd34;
    end else if (p_Result_5_fu_2015_p1[28] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd35;
    end else if (p_Result_5_fu_2015_p1[27] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd36;
    end else if (p_Result_5_fu_2015_p1[26] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd37;
    end else if (p_Result_5_fu_2015_p1[25] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd38;
    end else if (p_Result_5_fu_2015_p1[24] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd39;
    end else if (p_Result_5_fu_2015_p1[23] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd40;
    end else if (p_Result_5_fu_2015_p1[22] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd41;
    end else if (p_Result_5_fu_2015_p1[21] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd42;
    end else if (p_Result_5_fu_2015_p1[20] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd43;
    end else if (p_Result_5_fu_2015_p1[19] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd44;
    end else if (p_Result_5_fu_2015_p1[18] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd45;
    end else if (p_Result_5_fu_2015_p1[17] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd46;
    end else if (p_Result_5_fu_2015_p1[16] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd47;
    end else if (p_Result_5_fu_2015_p1[15] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd48;
    end else if (p_Result_5_fu_2015_p1[14] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd49;
    end else if (p_Result_5_fu_2015_p1[13] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd50;
    end else if (p_Result_5_fu_2015_p1[12] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd51;
    end else if (p_Result_5_fu_2015_p1[11] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd52;
    end else if (p_Result_5_fu_2015_p1[10] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd53;
    end else if (p_Result_5_fu_2015_p1[9] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd54;
    end else if (p_Result_5_fu_2015_p1[8] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd55;
    end else if (p_Result_5_fu_2015_p1[7] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd56;
    end else if (p_Result_5_fu_2015_p1[6] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd57;
    end else if (p_Result_5_fu_2015_p1[5] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd58;
    end else if (p_Result_5_fu_2015_p1[4] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd59;
    end else if (p_Result_5_fu_2015_p1[3] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd60;
    end else if (p_Result_5_fu_2015_p1[2] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd61;
    end else if (p_Result_5_fu_2015_p1[1] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd62;
    end else if (p_Result_5_fu_2015_p1[0] == 1'b1) begin
        tmp_24_fu_2019_p3 = 64'd63;
    end else begin
        tmp_24_fu_2019_p3 = 64'd64;
    end
end

assign tmp_25_fu_780_p1 = p_Val2_34_fu_774_p3[0:0];

assign tmp_26_fu_2031_p2 = ((tmp_64_fu_2005_p4 == 54'd0) ? 1'b1 : 1'b0);

assign tmp_27_fu_1647_p2 = ((sh_amt_fu_1625_p3 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_29_fu_1669_p1 = $unsigned(sh_amt_cast_fu_1633_p1);

assign tmp_2_fu_1138_p4 = {{r_V_30_fu_1132_p2[74:38]}};

always @ (p_Result_37_fu_2041_p3) begin
    if (p_Result_37_fu_2041_p3[63] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd0;
    end else if (p_Result_37_fu_2041_p3[62] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd1;
    end else if (p_Result_37_fu_2041_p3[61] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd2;
    end else if (p_Result_37_fu_2041_p3[60] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd3;
    end else if (p_Result_37_fu_2041_p3[59] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd4;
    end else if (p_Result_37_fu_2041_p3[58] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd5;
    end else if (p_Result_37_fu_2041_p3[57] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd6;
    end else if (p_Result_37_fu_2041_p3[56] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd7;
    end else if (p_Result_37_fu_2041_p3[55] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd8;
    end else if (p_Result_37_fu_2041_p3[54] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd9;
    end else if (p_Result_37_fu_2041_p3[53] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd10;
    end else if (p_Result_37_fu_2041_p3[52] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd11;
    end else if (p_Result_37_fu_2041_p3[51] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd12;
    end else if (p_Result_37_fu_2041_p3[50] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd13;
    end else if (p_Result_37_fu_2041_p3[49] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd14;
    end else if (p_Result_37_fu_2041_p3[48] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd15;
    end else if (p_Result_37_fu_2041_p3[47] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd16;
    end else if (p_Result_37_fu_2041_p3[46] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd17;
    end else if (p_Result_37_fu_2041_p3[45] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd18;
    end else if (p_Result_37_fu_2041_p3[44] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd19;
    end else if (p_Result_37_fu_2041_p3[43] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd20;
    end else if (p_Result_37_fu_2041_p3[42] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd21;
    end else if (p_Result_37_fu_2041_p3[41] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd22;
    end else if (p_Result_37_fu_2041_p3[40] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd23;
    end else if (p_Result_37_fu_2041_p3[39] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd24;
    end else if (p_Result_37_fu_2041_p3[38] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd25;
    end else if (p_Result_37_fu_2041_p3[37] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd26;
    end else if (p_Result_37_fu_2041_p3[36] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd27;
    end else if (p_Result_37_fu_2041_p3[35] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd28;
    end else if (p_Result_37_fu_2041_p3[34] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd29;
    end else if (p_Result_37_fu_2041_p3[33] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd30;
    end else if (p_Result_37_fu_2041_p3[32] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd31;
    end else if (p_Result_37_fu_2041_p3[31] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd32;
    end else if (p_Result_37_fu_2041_p3[30] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd33;
    end else if (p_Result_37_fu_2041_p3[29] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd34;
    end else if (p_Result_37_fu_2041_p3[28] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd35;
    end else if (p_Result_37_fu_2041_p3[27] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd36;
    end else if (p_Result_37_fu_2041_p3[26] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd37;
    end else if (p_Result_37_fu_2041_p3[25] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd38;
    end else if (p_Result_37_fu_2041_p3[24] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd39;
    end else if (p_Result_37_fu_2041_p3[23] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd40;
    end else if (p_Result_37_fu_2041_p3[22] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd41;
    end else if (p_Result_37_fu_2041_p3[21] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd42;
    end else if (p_Result_37_fu_2041_p3[20] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd43;
    end else if (p_Result_37_fu_2041_p3[19] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd44;
    end else if (p_Result_37_fu_2041_p3[18] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd45;
    end else if (p_Result_37_fu_2041_p3[17] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd46;
    end else if (p_Result_37_fu_2041_p3[16] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd47;
    end else if (p_Result_37_fu_2041_p3[15] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd48;
    end else if (p_Result_37_fu_2041_p3[14] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd49;
    end else if (p_Result_37_fu_2041_p3[13] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd50;
    end else if (p_Result_37_fu_2041_p3[12] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd51;
    end else if (p_Result_37_fu_2041_p3[11] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd52;
    end else if (p_Result_37_fu_2041_p3[10] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd53;
    end else if (p_Result_37_fu_2041_p3[9] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd54;
    end else if (p_Result_37_fu_2041_p3[8] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd55;
    end else if (p_Result_37_fu_2041_p3[7] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd56;
    end else if (p_Result_37_fu_2041_p3[6] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd57;
    end else if (p_Result_37_fu_2041_p3[5] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd58;
    end else if (p_Result_37_fu_2041_p3[4] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd59;
    end else if (p_Result_37_fu_2041_p3[3] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd60;
    end else if (p_Result_37_fu_2041_p3[2] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd61;
    end else if (p_Result_37_fu_2041_p3[1] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd62;
    end else if (p_Result_37_fu_2041_p3[0] == 1'b1) begin
        tmp_30_fu_2049_p3 = 64'd63;
    end else begin
        tmp_30_fu_2049_p3 = 64'd64;
    end
end

assign tmp_32_fu_2075_p2 = (32'd66 - l_fu_2067_p3);

assign tmp_33_fu_1405_p2 = (tmp_76_i_reg_2451 | or_cond_i_fu_1359_p2);

assign tmp_34_fu_1673_p2 = $signed(man_V_2_fu_1577_p3) >>> tmp_29_fu_1669_p1;

assign tmp_35_fu_1691_p3 = ((tmp_63_fu_1683_p3[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign tmp_36_fu_1699_p2 = tmp_60_fu_1643_p1 << sh_amt_cast_fu_1633_p1;

assign tmp_37_fu_1529_p1 = ireg_V_fu_1525_p1[62:0];

assign tmp_39_fu_1934_p4 = {{p_neg_fu_1928_p2[64:10]}};

assign tmp_40_fu_2134_p2 = ((p_Result_25_fu_2128_p2 != 66'd0) ? 1'b1 : 1'b0);

assign tmp_41_fu_1954_p4 = {{ret_V_13_fu_1914_p2[64:10]}};

assign tmp_42_fu_2168_p2 = (rev_fu_2154_p2 & p_Result_3_fu_2160_p3);

assign tmp_43_fu_2174_p2 = (tmp_42_fu_2168_p2 | a_fu_2140_p2);

assign tmp_44_fu_2180_p3 = {{31'd0}, {tmp_43_fu_2174_p2}};

assign tmp_45_fu_1555_p1 = ireg_V_fu_1525_p1[51:0];

assign tmp_46_fu_2188_p2 = (($signed(lsb_index_fu_2092_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign tmp_47_fu_2194_p2 = ($signed(32'd4294967242) + $signed(tmp_32_reg_2690));

assign tmp_48_fu_2199_p1 = tmp_47_fu_2194_p2;

assign tmp_49_fu_2203_p2 = tmp_V_4_cast_fu_2089_p1 >> tmp_48_fu_2199_p1;

assign tmp_50_fu_2209_p2 = (32'd54 - tmp_32_reg_2690);

assign tmp_51_fu_2214_p1 = tmp_50_fu_2209_p2;

assign tmp_52_fu_2218_p2 = tmp_V_4_cast_fu_2089_p1 << tmp_51_fu_2214_p1;

assign tmp_53_fu_2240_p1 = tmp_44_fu_2180_p3;

assign tmp_54_fu_1597_p4 = {{F2_fu_1591_p2[11:5]}};

assign tmp_55_fu_2280_p2 = (11'd4 - tmp_81_reg_2702);

assign tmp_56_fu_2291_p3 = {{p_Result_36_reg_2679}, {p_Repl2_2_trunc_fu_2285_p2}};

assign tmp_57_fu_2310_p1 = p_Result_38_fu_2298_p5;

assign tmp_58_fu_1867_p2 = (tmp_12_reg_2640 + j_cast_fu_1837_p1);

assign tmp_59_fu_2322_p1 = tmp_58_reg_2663;

assign tmp_5_fu_1452_p1 = i_reg_511;

assign tmp_60_fu_1643_p1 = man_V_2_fu_1577_p3[31:0];

assign tmp_61_fu_1653_p4 = {{sh_amt_fu_1625_p3[11:5]}};

assign tmp_62_fu_1679_p1 = tmp_34_fu_1673_p2[31:0];

assign tmp_63_fu_1683_p3 = ireg_V_fu_1525_p1[32'd63];

assign tmp_64_fu_2005_p4 = {{tmp_V_12_fu_1999_p3[55:2]}};

assign tmp_65_fu_1853_p1 = from_FFT_dout[21:0];

assign tmp_66_cast_cast_cas_fu_2272_p3 = ((tmp_80_fu_2264_p3[0:0] === 1'b1) ? 11'd1023 : 11'd1022);

assign tmp_66_fu_1920_p3 = ret_V_13_fu_1914_p2[32'd64];

assign tmp_67_fu_2027_p1 = tmp_24_fu_2019_p3[31:0];

assign tmp_68_fu_2037_p1 = tmp_V_12_fu_1999_p3[1:0];

assign tmp_69_fu_2057_p1 = tmp_30_fu_2049_p3[31:0];

assign tmp_6_fu_1469_p3 = {{frame_reg_523}, {7'd0}};

assign tmp_70_fu_2097_p4 = {{lsb_index_fu_2092_p2[31:1]}};

assign tmp_71_fu_2081_p1 = tmp_32_fu_2075_p2[6:0];

assign tmp_72_fu_2113_p2 = ($signed(7'd120) - $signed(tmp_71_reg_2697));

assign tmp_72_i_i_i_fu_704_p1 = tmp_23_reg_2388;

assign tmp_73_fu_2118_p1 = tmp_72_fu_2113_p2;

assign tmp_73_i_fu_1352_p3 = ((sin_basis_reg_2458[0:0] === 1'b1) ? tmp_28_fu_1276_p18 : tmp_31_fu_1314_p18);

assign tmp_74_fu_2122_p2 = 66'd73786976294838206463 >> tmp_73_fu_2118_p1;

assign tmp_74_i_fu_882_p2 = ((tmp_V_8_reg_2364 == 11'd0) ? 1'b1 : 1'b0);

assign tmp_75_i_fu_737_p2 = ((tmp_V_9_reg_2371 == 52'd0) ? 1'b1 : 1'b0);

assign tmp_76_fu_2146_p3 = lsb_index_fu_2092_p2[32'd31];

assign tmp_76_i_fu_887_p2 = ((tmp_V_8_reg_2364 == 11'd2047) ? 1'b1 : 1'b0);

assign tmp_77_fu_2224_p1 = tmp_49_fu_2203_p2[63:0];

assign tmp_77_i_fu_1368_p2 = (tmp_76_i_reg_2451 | tmp_73_i_fu_1352_p3);

assign tmp_78_fu_2228_p1 = tmp_52_fu_2218_p2[63:0];

assign tmp_80_fu_2264_p3 = m_1_fu_2244_p2[32'd54];

assign tmp_81_fu_2085_p1 = l_fu_2067_p3[10:0];

assign tmp_81_i_i_fu_1148_p1 = tmp_2_fu_1138_p4;

assign tmp_89_i_i_fu_844_p1 = Mx_zeros_V_fu_840_p1;

assign tmp_92_i_i_fu_864_p1 = Mx_zeros_V_fu_840_p1;

assign tmp_94_i_i_fu_895_p2 = ($signed(12'd0) - $signed(sh_i_cast_i_fu_892_p1));

assign tmp_95_i_i_fu_912_p1 = $unsigned(sh_assign_4_i_cast_i_fu_908_p1);

assign tmp_98_i_i_fu_1006_p1 = p_Result_30_fu_998_p3;

assign tmp_9_fu_1498_p2 = (tmp_6_reg_2584 + i1_cast_fu_1477_p1);

assign tmp_V_10_fu_1256_p4 = {{p_Val2_24_fu_1244_p1[62:52]}};

assign tmp_V_11_fu_1266_p1 = p_Val2_24_fu_1244_p1[51:0];

assign tmp_V_12_fu_1999_p3 = ((p_Result_36_reg_2679[0:0] === 1'b1) ? tmp_V_fu_1994_p2 : tmp_21_reg_2668);

assign tmp_V_4_cast_fu_2089_p1 = tmp_V_12_reg_2685;

assign tmp_V_8_fu_644_p4 = {{p_Val2_s_fu_633_p1[62:52]}};

assign tmp_V_9_fu_654_p1 = p_Val2_s_fu_633_p1[51:0];

assign tmp_V_fu_1994_p2 = (56'd0 - tmp_21_reg_2668);

assign tmp_fu_609_p2 = peak_value << 32'd9;

assign tmp_i2_i_i_fu_688_p1 = p_Result_i_i_i_fu_678_p4;


always @ (p_Result_29_fu_824_p3) begin
    if (p_Result_29_fu_824_p3[0] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd0;
    end else if (p_Result_29_fu_824_p3[1] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd1;
    end else if (p_Result_29_fu_824_p3[2] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd2;
    end else if (p_Result_29_fu_824_p3[3] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd3;
    end else if (p_Result_29_fu_824_p3[4] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd4;
    end else if (p_Result_29_fu_824_p3[5] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd5;
    end else if (p_Result_29_fu_824_p3[6] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd6;
    end else if (p_Result_29_fu_824_p3[7] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd7;
    end else if (p_Result_29_fu_824_p3[8] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd8;
    end else if (p_Result_29_fu_824_p3[9] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd9;
    end else if (p_Result_29_fu_824_p3[10] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd10;
    end else if (p_Result_29_fu_824_p3[11] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd11;
    end else if (p_Result_29_fu_824_p3[12] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd12;
    end else if (p_Result_29_fu_824_p3[13] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd13;
    end else if (p_Result_29_fu_824_p3[14] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd14;
    end else if (p_Result_29_fu_824_p3[15] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd15;
    end else if (p_Result_29_fu_824_p3[16] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd16;
    end else if (p_Result_29_fu_824_p3[17] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd17;
    end else if (p_Result_29_fu_824_p3[18] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd18;
    end else if (p_Result_29_fu_824_p3[19] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd19;
    end else if (p_Result_29_fu_824_p3[20] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd20;
    end else if (p_Result_29_fu_824_p3[21] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd21;
    end else if (p_Result_29_fu_824_p3[22] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd22;
    end else if (p_Result_29_fu_824_p3[23] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd23;
    end else if (p_Result_29_fu_824_p3[24] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd24;
    end else if (p_Result_29_fu_824_p3[25] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd25;
    end else if (p_Result_29_fu_824_p3[26] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd26;
    end else if (p_Result_29_fu_824_p3[27] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd27;
    end else if (p_Result_29_fu_824_p3[28] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd28;
    end else if (p_Result_29_fu_824_p3[29] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd29;
    end else if (p_Result_29_fu_824_p3[30] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd30;
    end else if (p_Result_29_fu_824_p3[31] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd31;
    end else if (p_Result_29_fu_824_p3[32] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd32;
    end else if (p_Result_29_fu_824_p3[33] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd33;
    end else if (p_Result_29_fu_824_p3[34] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd34;
    end else if (p_Result_29_fu_824_p3[35] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd35;
    end else if (p_Result_29_fu_824_p3[36] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd36;
    end else if (p_Result_29_fu_824_p3[37] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd37;
    end else if (p_Result_29_fu_824_p3[38] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd38;
    end else if (p_Result_29_fu_824_p3[39] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd39;
    end else if (p_Result_29_fu_824_p3[40] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd40;
    end else if (p_Result_29_fu_824_p3[41] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd41;
    end else if (p_Result_29_fu_824_p3[42] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd42;
    end else if (p_Result_29_fu_824_p3[43] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd43;
    end else if (p_Result_29_fu_824_p3[44] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd44;
    end else if (p_Result_29_fu_824_p3[45] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd45;
    end else if (p_Result_29_fu_824_p3[46] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd46;
    end else if (p_Result_29_fu_824_p3[47] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd47;
    end else if (p_Result_29_fu_824_p3[48] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd48;
    end else if (p_Result_29_fu_824_p3[49] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd49;
    end else if (p_Result_29_fu_824_p3[50] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd50;
    end else if (p_Result_29_fu_824_p3[51] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd51;
    end else if (p_Result_29_fu_824_p3[52] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd52;
    end else if (p_Result_29_fu_824_p3[53] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd53;
    end else if (p_Result_29_fu_824_p3[54] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd54;
    end else if (p_Result_29_fu_824_p3[55] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd55;
    end else if (p_Result_29_fu_824_p3[56] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd56;
    end else if (p_Result_29_fu_824_p3[57] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd57;
    end else if (p_Result_29_fu_824_p3[58] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd58;
    end else if (p_Result_29_fu_824_p3[59] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd59;
    end else if (p_Result_29_fu_824_p3[60] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd60;
    end else if (p_Result_29_fu_824_p3[61] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd61;
    end else if (p_Result_29_fu_824_p3[62] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd62;
    end else if (p_Result_29_fu_824_p3[63] == 1'b1) begin
        tmp_i5_i_i_fu_832_p3 = 64'd63;
    end else begin
        tmp_i5_i_i_fu_832_p3 = 64'd64;
    end
end

assign tmp_i_i_fu_762_p2 = ($signed(11'd1027) + $signed(tmp_V_8_reg_2364));

assign tmp_s_fu_1493_p1 = i1_reg_535;

assign to_FFT_din = {{32'd0}, {newSel3_reg_2635}};

assign ush_fu_901_p3 = ((isNeg_reg_2439[0:0] === 1'b1) ? tmp_94_i_i_fu_895_p2 : sh_i_cast_i_fu_892_p1);

always @ (posedge ap_clk) begin
    r_V_9_reg_2470[97:49] <= 49'b0000000000000000000000000000000000000000000000000;
    tmp_6_reg_2584[6:0] <= 7'b0000000;
    tmp_s_reg_2597[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    tmp_12_reg_2640[8:0] <= 9'b000000000;
end

endmodule //window_FFT
