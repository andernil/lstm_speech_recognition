// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "scaled_fixed2ieee.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic scaled_fixed2ieee::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic scaled_fixed2ieee::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> scaled_fixed2ieee::ap_ST_fsm_state1 = "1";
const sc_lv<7> scaled_fixed2ieee::ap_ST_fsm_state2 = "10";
const sc_lv<7> scaled_fixed2ieee::ap_ST_fsm_state3 = "100";
const sc_lv<7> scaled_fixed2ieee::ap_ST_fsm_state4 = "1000";
const sc_lv<7> scaled_fixed2ieee::ap_ST_fsm_state5 = "10000";
const sc_lv<7> scaled_fixed2ieee::ap_ST_fsm_state6 = "100000";
const sc_lv<7> scaled_fixed2ieee::ap_ST_fsm_state7 = "1000000";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_1 = "1";
const sc_lv<1> scaled_fixed2ieee::ap_const_lv1_0 = "0";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_3 = "11";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_5 = "101";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_6 = "110";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_2 = "10";
const sc_lv<2> scaled_fixed2ieee::ap_const_lv2_0 = "00";
const sc_lv<3> scaled_fixed2ieee::ap_const_lv3_0 = "000";
const sc_lv<1> scaled_fixed2ieee::ap_const_lv1_1 = "1";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_4 = "100";
const sc_lv<64> scaled_fixed2ieee::ap_const_lv64_3 = "11";
const sc_lv<4> scaled_fixed2ieee::ap_const_lv4_0 = "0000";
const sc_lv<4> scaled_fixed2ieee::ap_const_lv4_C = "1100";
const sc_lv<4> scaled_fixed2ieee::ap_const_lv4_F = "1111";
const sc_lv<2> scaled_fixed2ieee::ap_const_lv2_3 = "11";
const sc_lv<2> scaled_fixed2ieee::ap_const_lv2_1 = "1";
const sc_lv<17> scaled_fixed2ieee::ap_const_lv17_10000 = "10000000000000000";
const sc_lv<6> scaled_fixed2ieee::ap_const_lv6_3E = "111110";
const sc_lv<6> scaled_fixed2ieee::ap_const_lv6_2F = "101111";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_3E = "111110";
const sc_lv<63> scaled_fixed2ieee::ap_const_lv63_7FFFFFFFFFFFFFFF = "111111111111111111111111111111111111111111111111111111111111111";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_F = "1111";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_1F = "11111";
const sc_lv<3> scaled_fixed2ieee::ap_const_lv3_4 = "100";
const sc_lv<3> scaled_fixed2ieee::ap_const_lv3_1 = "1";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_10 = "10000";
const sc_lv<12> scaled_fixed2ieee::ap_const_lv12_3FF = "1111111111";
const sc_lv<63> scaled_fixed2ieee::ap_const_lv63_0 = "000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_A = "1010";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_3D = "111101";
const sc_lv<52> scaled_fixed2ieee::ap_const_lv52_0 = "0000000000000000000000000000000000000000000000000000";
const sc_lv<11> scaled_fixed2ieee::ap_const_lv11_0 = "00000000000";
const sc_lv<64> scaled_fixed2ieee::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const bool scaled_fixed2ieee::ap_const_boolean_1 = true;

scaled_fixed2ieee::scaled_fixed2ieee(sc_module_name name) : sc_module(name), mVcdFile(0) {
    out_bits_V_U = new scaled_fixed2ieee_out_bits_V("out_bits_V_U");
    out_bits_V_U->clk(ap_clk);
    out_bits_V_U->reset(ap_rst);
    out_bits_V_U->address0(out_bits_V_address0);
    out_bits_V_U->ce0(out_bits_V_ce0);
    out_bits_V_U->we0(out_bits_V_we0);
    out_bits_V_U->d0(out_bits_V_d0);
    out_bits_V_U->q0(out_bits_V_q0);
    c_U = new scaled_fixed2ieee_c("c_U");
    c_U->clk(ap_clk);
    c_U->reset(ap_rst);
    c_U->address0(c_address0);
    c_U->ce0(c_ce0);
    c_U->we0(c_we0);
    c_U->d0(c_d0);
    c_U->q0(c_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Hi_assign_fu_278_p2);
    sensitive << ( tmp_s_fu_270_p3 );

    SC_METHOD(thread_Lo_assign_fu_284_p2);
    sensitive << ( tmp_s_fu_270_p3 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_99_reg_641 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_67_fu_512_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_p_Val2_9_in_phi_fu_224_p4);
    sensitive << ( tmp_99_reg_641 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( r_V_36_fu_503_p3 );
    sensitive << ( tmp_67_fu_512_p2 );
    sensitive << ( p_Val2_9_in_reg_221 );

    SC_METHOD(thread_ap_phi_mux_shift_1_phi_fu_234_p4);
    sensitive << ( tmp_99_reg_641 );
    sensitive << ( shift_2_fu_458_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_67_fu_512_p2 );
    sensitive << ( shift_1_reg_231 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( tmp_99_reg_641 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_67_fu_512_p2 );

    SC_METHOD(thread_ap_return);
    sensitive << ( tmp_99_reg_641 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_67_fu_512_p2 );
    sensitive << ( result_write_assign_fu_592_p1 );
    sensitive << ( ap_return_preg );

    SC_METHOD(thread_c_address0);
    sensitive << ( tmp_62_reg_631 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_64_fu_453_p1 );

    SC_METHOD(thread_c_ce0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_c_d0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( p_Result_39_fu_420_p4 );

    SC_METHOD(thread_c_we0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_exitcond6_fu_241_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_165 );

    SC_METHOD(thread_exitcond_fu_403_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i1_reg_177 );

    SC_METHOD(thread_i_5_fu_247_p2);
    sensitive << ( i_reg_165 );

    SC_METHOD(thread_i_6_fu_409_p2);
    sensitive << ( i1_reg_177 );

    SC_METHOD(thread_i_7_fu_447_p2);
    sensitive << ( i2_reg_210 );

    SC_METHOD(thread_isNeg_fu_465_p3);
    sensitive << ( c_q0 );

    SC_METHOD(thread_newexp_fu_527_p2);
    sensitive << ( ap_phi_mux_shift_1_phi_fu_234_p4 );
    sensitive << ( tmp_82_cast_fu_523_p1 );

    SC_METHOD(thread_or_cond_fu_546_p2);
    sensitive << ( tmp_101_fu_533_p3 );
    sensitive << ( tmp_69_fu_541_p2 );

    SC_METHOD(thread_out_bits_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( out_bits_V_addr_1_reg_618 );
    sensitive << ( exitcond6_fu_241_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_62_fu_415_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_fu_253_p1 );

    SC_METHOD(thread_out_bits_V_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond6_fu_241_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_out_bits_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond6_fu_241_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_83_fu_261_p3 );
    sensitive << ( p_Result_4_fu_390_p5 );

    SC_METHOD(thread_out_bits_V_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond6_fu_241_p2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_out_exp_V_fu_574_p3);
    sensitive << ( or_cond_fu_546_p2 );
    sensitive << ( tmp_102_fu_552_p1 );

    SC_METHOD(thread_p_Result_39_fu_420_p4);
    sensitive << ( out_bits_V_q0 );

    SC_METHOD(thread_p_Result_40_fu_582_p4);
    sensitive << ( out_exp_V_fu_574_p3 );
    sensitive << ( significand_V_fu_566_p3 );

    SC_METHOD(thread_p_Result_4_fu_390_p5);
    sensitive << ( out_bits_V_q0 );
    sensitive << ( tmp_61_fu_382_p3 );

    SC_METHOD(thread_p_Result_s_fu_372_p2);
    sensitive << ( tmp_95_fu_360_p2 );
    sensitive << ( tmp_96_fu_366_p2 );

    SC_METHOD(thread_phitmp1_fu_556_p4);
    sensitive << ( ap_phi_mux_p_Val2_9_in_phi_fu_224_p4 );

    SC_METHOD(thread_r_V_36_fu_503_p3);
    sensitive << ( isNeg_fu_465_p3 );
    sensitive << ( r_V_fu_491_p2 );
    sensitive << ( r_V_8_fu_497_p2 );

    SC_METHOD(thread_r_V_8_fu_497_p2);
    sensitive << ( p_s_reg_188 );
    sensitive << ( tmp_66_fu_487_p1 );

    SC_METHOD(thread_r_V_fu_491_p2);
    sensitive << ( p_s_reg_188 );
    sensitive << ( tmp_66_fu_487_p1 );

    SC_METHOD(thread_result_write_assign_fu_592_p1);
    sensitive << ( p_Result_40_fu_582_p4 );

    SC_METHOD(thread_shift_2_fu_458_p2);
    sensitive << ( c_q0 );
    sensitive << ( shift_reg_198 );

    SC_METHOD(thread_significand_V_fu_566_p3);
    sensitive << ( or_cond_fu_546_p2 );
    sensitive << ( phitmp1_fu_556_p4 );

    SC_METHOD(thread_tmp_101_fu_533_p3);
    sensitive << ( newexp_fu_527_p2 );

    SC_METHOD(thread_tmp_102_fu_552_p1);
    sensitive << ( newexp_fu_527_p2 );

    SC_METHOD(thread_tmp_61_fu_382_p3);
    sensitive << ( tmp_98_fu_378_p1 );

    SC_METHOD(thread_tmp_62_fu_415_p1);
    sensitive << ( i1_reg_177 );

    SC_METHOD(thread_tmp_64_fu_453_p1);
    sensitive << ( i2_reg_210 );

    SC_METHOD(thread_tmp_65_fu_473_p2);
    sensitive << ( c_q0 );

    SC_METHOD(thread_tmp_66_fu_487_p1);
    sensitive << ( ush_fu_479_p3 );

    SC_METHOD(thread_tmp_67_fu_512_p2);
    sensitive << ( tmp_99_reg_641 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( c_q0 );

    SC_METHOD(thread_tmp_68_fu_518_p2);
    sensitive << ( prescale );

    SC_METHOD(thread_tmp_69_fu_541_p2);
    sensitive << ( in_V );
    sensitive << ( tmp_99_reg_641 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_67_fu_512_p2 );

    SC_METHOD(thread_tmp_82_cast_fu_523_p1);
    sensitive << ( tmp_68_fu_518_p2 );

    SC_METHOD(thread_tmp_82_fu_258_p1);
    sensitive << ( in_V );

    SC_METHOD(thread_tmp_83_fu_261_p3);
    sensitive << ( tmp_82_fu_258_p1 );

    SC_METHOD(thread_tmp_84_fu_290_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( Lo_assign_fu_284_p2 );
    sensitive << ( Hi_assign_fu_278_p2 );

    SC_METHOD(thread_tmp_85_fu_296_p4);
    sensitive << ( in_V );

    SC_METHOD(thread_tmp_86_fu_305_p2);
    sensitive << ( Lo_assign_fu_284_p2 );
    sensitive << ( Hi_assign_fu_278_p2 );

    SC_METHOD(thread_tmp_87_fu_311_p2);
    sensitive << ( Lo_assign_fu_284_p2 );

    SC_METHOD(thread_tmp_88_fu_317_p2);
    sensitive << ( Lo_assign_fu_284_p2 );
    sensitive << ( Hi_assign_fu_278_p2 );

    SC_METHOD(thread_tmp_89_fu_323_p3);
    sensitive << ( tmp_84_fu_290_p2 );
    sensitive << ( tmp_86_fu_305_p2 );
    sensitive << ( tmp_88_fu_317_p2 );

    SC_METHOD(thread_tmp_90_fu_331_p3);
    sensitive << ( in_V );
    sensitive << ( tmp_84_fu_290_p2 );
    sensitive << ( tmp_85_fu_296_p4 );

    SC_METHOD(thread_tmp_91_fu_338_p3);
    sensitive << ( Lo_assign_fu_284_p2 );
    sensitive << ( tmp_84_fu_290_p2 );
    sensitive << ( tmp_87_fu_311_p2 );

    SC_METHOD(thread_tmp_92_fu_346_p2);
    sensitive << ( tmp_89_fu_323_p3 );

    SC_METHOD(thread_tmp_93_fu_352_p1);
    sensitive << ( tmp_91_fu_338_p3 );

    SC_METHOD(thread_tmp_94_fu_356_p1);
    sensitive << ( tmp_92_fu_346_p2 );

    SC_METHOD(thread_tmp_95_fu_360_p2);
    sensitive << ( tmp_90_fu_331_p3 );
    sensitive << ( tmp_93_fu_352_p1 );

    SC_METHOD(thread_tmp_96_fu_366_p2);
    sensitive << ( tmp_94_fu_356_p1 );

    SC_METHOD(thread_tmp_98_fu_378_p1);
    sensitive << ( p_Result_s_fu_372_p2 );

    SC_METHOD(thread_tmp_99_fu_439_p3);
    sensitive << ( i2_reg_210 );

    SC_METHOD(thread_tmp_fu_253_p1);
    sensitive << ( i_reg_165 );

    SC_METHOD(thread_tmp_s_fu_270_p3);
    sensitive << ( i_reg_165 );

    SC_METHOD(thread_ush_fu_479_p3);
    sensitive << ( c_q0 );
    sensitive << ( isNeg_fu_465_p3 );
    sensitive << ( tmp_65_fu_473_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond6_fu_241_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond_fu_403_p2 );
    sensitive << ( tmp_99_reg_641 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_67_fu_512_p2 );

    ap_CS_fsm = "0000001";
    ap_return_preg = "0000000000000000000000000000000000000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "scaled_fixed2ieee_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_V, "(port)in_V");
    sc_trace(mVcdFile, prescale, "(port)prescale");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_5_fu_247_p2, "i_5_fu_247_p2");
    sc_trace(mVcdFile, i_5_reg_613, "i_5_reg_613");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, out_bits_V_addr_1_reg_618, "out_bits_V_addr_1_reg_618");
    sc_trace(mVcdFile, exitcond6_fu_241_p2, "exitcond6_fu_241_p2");
    sc_trace(mVcdFile, i_6_fu_409_p2, "i_6_fu_409_p2");
    sc_trace(mVcdFile, i_6_reg_626, "i_6_reg_626");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_62_fu_415_p1, "tmp_62_fu_415_p1");
    sc_trace(mVcdFile, tmp_62_reg_631, "tmp_62_reg_631");
    sc_trace(mVcdFile, exitcond_fu_403_p2, "exitcond_fu_403_p2");
    sc_trace(mVcdFile, tmp_99_fu_439_p3, "tmp_99_fu_439_p3");
    sc_trace(mVcdFile, tmp_99_reg_641, "tmp_99_reg_641");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, i_7_fu_447_p2, "i_7_fu_447_p2");
    sc_trace(mVcdFile, i_7_reg_645, "i_7_reg_645");
    sc_trace(mVcdFile, shift_2_fu_458_p2, "shift_2_fu_458_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, r_V_36_fu_503_p3, "r_V_36_fu_503_p3");
    sc_trace(mVcdFile, out_bits_V_address0, "out_bits_V_address0");
    sc_trace(mVcdFile, out_bits_V_ce0, "out_bits_V_ce0");
    sc_trace(mVcdFile, out_bits_V_we0, "out_bits_V_we0");
    sc_trace(mVcdFile, out_bits_V_d0, "out_bits_V_d0");
    sc_trace(mVcdFile, out_bits_V_q0, "out_bits_V_q0");
    sc_trace(mVcdFile, c_address0, "c_address0");
    sc_trace(mVcdFile, c_ce0, "c_ce0");
    sc_trace(mVcdFile, c_we0, "c_we0");
    sc_trace(mVcdFile, c_d0, "c_d0");
    sc_trace(mVcdFile, c_q0, "c_q0");
    sc_trace(mVcdFile, i_reg_165, "i_reg_165");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i1_reg_177, "i1_reg_177");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, p_s_reg_188, "p_s_reg_188");
    sc_trace(mVcdFile, tmp_67_fu_512_p2, "tmp_67_fu_512_p2");
    sc_trace(mVcdFile, shift_reg_198, "shift_reg_198");
    sc_trace(mVcdFile, i2_reg_210, "i2_reg_210");
    sc_trace(mVcdFile, ap_phi_mux_p_Val2_9_in_phi_fu_224_p4, "ap_phi_mux_p_Val2_9_in_phi_fu_224_p4");
    sc_trace(mVcdFile, p_Val2_9_in_reg_221, "p_Val2_9_in_reg_221");
    sc_trace(mVcdFile, ap_phi_mux_shift_1_phi_fu_234_p4, "ap_phi_mux_shift_1_phi_fu_234_p4");
    sc_trace(mVcdFile, shift_1_reg_231, "shift_1_reg_231");
    sc_trace(mVcdFile, tmp_fu_253_p1, "tmp_fu_253_p1");
    sc_trace(mVcdFile, tmp_64_fu_453_p1, "tmp_64_fu_453_p1");
    sc_trace(mVcdFile, tmp_83_fu_261_p3, "tmp_83_fu_261_p3");
    sc_trace(mVcdFile, p_Result_4_fu_390_p5, "p_Result_4_fu_390_p5");
    sc_trace(mVcdFile, tmp_82_fu_258_p1, "tmp_82_fu_258_p1");
    sc_trace(mVcdFile, tmp_s_fu_270_p3, "tmp_s_fu_270_p3");
    sc_trace(mVcdFile, Lo_assign_fu_284_p2, "Lo_assign_fu_284_p2");
    sc_trace(mVcdFile, Hi_assign_fu_278_p2, "Hi_assign_fu_278_p2");
    sc_trace(mVcdFile, tmp_84_fu_290_p2, "tmp_84_fu_290_p2");
    sc_trace(mVcdFile, tmp_86_fu_305_p2, "tmp_86_fu_305_p2");
    sc_trace(mVcdFile, tmp_88_fu_317_p2, "tmp_88_fu_317_p2");
    sc_trace(mVcdFile, tmp_85_fu_296_p4, "tmp_85_fu_296_p4");
    sc_trace(mVcdFile, tmp_87_fu_311_p2, "tmp_87_fu_311_p2");
    sc_trace(mVcdFile, tmp_89_fu_323_p3, "tmp_89_fu_323_p3");
    sc_trace(mVcdFile, tmp_91_fu_338_p3, "tmp_91_fu_338_p3");
    sc_trace(mVcdFile, tmp_92_fu_346_p2, "tmp_92_fu_346_p2");
    sc_trace(mVcdFile, tmp_90_fu_331_p3, "tmp_90_fu_331_p3");
    sc_trace(mVcdFile, tmp_93_fu_352_p1, "tmp_93_fu_352_p1");
    sc_trace(mVcdFile, tmp_94_fu_356_p1, "tmp_94_fu_356_p1");
    sc_trace(mVcdFile, tmp_95_fu_360_p2, "tmp_95_fu_360_p2");
    sc_trace(mVcdFile, tmp_96_fu_366_p2, "tmp_96_fu_366_p2");
    sc_trace(mVcdFile, p_Result_s_fu_372_p2, "p_Result_s_fu_372_p2");
    sc_trace(mVcdFile, tmp_98_fu_378_p1, "tmp_98_fu_378_p1");
    sc_trace(mVcdFile, tmp_61_fu_382_p3, "tmp_61_fu_382_p3");
    sc_trace(mVcdFile, p_Result_39_fu_420_p4, "p_Result_39_fu_420_p4");
    sc_trace(mVcdFile, isNeg_fu_465_p3, "isNeg_fu_465_p3");
    sc_trace(mVcdFile, tmp_65_fu_473_p2, "tmp_65_fu_473_p2");
    sc_trace(mVcdFile, ush_fu_479_p3, "ush_fu_479_p3");
    sc_trace(mVcdFile, tmp_66_fu_487_p1, "tmp_66_fu_487_p1");
    sc_trace(mVcdFile, r_V_fu_491_p2, "r_V_fu_491_p2");
    sc_trace(mVcdFile, r_V_8_fu_497_p2, "r_V_8_fu_497_p2");
    sc_trace(mVcdFile, tmp_68_fu_518_p2, "tmp_68_fu_518_p2");
    sc_trace(mVcdFile, tmp_82_cast_fu_523_p1, "tmp_82_cast_fu_523_p1");
    sc_trace(mVcdFile, newexp_fu_527_p2, "newexp_fu_527_p2");
    sc_trace(mVcdFile, tmp_101_fu_533_p3, "tmp_101_fu_533_p3");
    sc_trace(mVcdFile, tmp_69_fu_541_p2, "tmp_69_fu_541_p2");
    sc_trace(mVcdFile, or_cond_fu_546_p2, "or_cond_fu_546_p2");
    sc_trace(mVcdFile, phitmp1_fu_556_p4, "phitmp1_fu_556_p4");
    sc_trace(mVcdFile, tmp_102_fu_552_p1, "tmp_102_fu_552_p1");
    sc_trace(mVcdFile, out_exp_V_fu_574_p3, "out_exp_V_fu_574_p3");
    sc_trace(mVcdFile, significand_V_fu_566_p3, "significand_V_fu_566_p3");
    sc_trace(mVcdFile, p_Result_40_fu_582_p4, "p_Result_40_fu_582_p4");
    sc_trace(mVcdFile, result_write_assign_fu_592_p1, "result_write_assign_fu_592_p1");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

scaled_fixed2ieee::~scaled_fixed2ieee() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete out_bits_V_U;
    delete c_U;
}

void scaled_fixed2ieee::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv64_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
             (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_67_fu_512_p2.read()) || 
              esl_seteq<1,1,1>(tmp_99_reg_641.read(), ap_const_lv1_1)))) {
            ap_return_preg = result_write_assign_fu_592_p1.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i1_reg_177 = i_6_reg_626.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond6_fu_241_p2.read(), ap_const_lv1_1))) {
        i1_reg_177 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_403_p2.read(), ap_const_lv1_1))) {
        i2_reg_210 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_99_reg_641.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_67_fu_512_p2.read()))) {
        i2_reg_210 = i_7_reg_645.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_165 = ap_const_lv2_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_reg_165 = i_5_reg_613.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_99_reg_641.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_67_fu_512_p2.read()))) {
        p_Val2_9_in_reg_221 = r_V_36_fu_503_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(tmp_99_fu_439_p3.read(), ap_const_lv1_1))) {
        p_Val2_9_in_reg_221 = p_s_reg_188.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_403_p2.read(), ap_const_lv1_1))) {
        p_s_reg_188 = in_V.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_99_reg_641.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_67_fu_512_p2.read()))) {
        p_s_reg_188 = r_V_36_fu_503_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_99_reg_641.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_67_fu_512_p2.read()))) {
        shift_1_reg_231 = shift_2_fu_458_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(tmp_99_fu_439_p3.read(), ap_const_lv1_1))) {
        shift_1_reg_231 = shift_reg_198.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_403_p2.read(), ap_const_lv1_1))) {
        shift_reg_198 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_99_reg_641.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_67_fu_512_p2.read()))) {
        shift_reg_198 = shift_2_fu_458_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_5_reg_613 = i_5_fu_247_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_6_reg_626 = i_6_fu_409_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i_7_reg_645 = i_7_fu_447_p2.read();
        tmp_99_reg_641 = i2_reg_210.read().range(2, 2);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond6_fu_241_p2.read(), ap_const_lv1_0))) {
        out_bits_V_addr_1_reg_618 =  (sc_lv<2>) (tmp_fu_253_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_403_p2.read()))) {
        tmp_62_reg_631 = tmp_62_fu_415_p1.read();
    }
}

void scaled_fixed2ieee::thread_Hi_assign_fu_278_p2() {
    Hi_assign_fu_278_p2 = (!ap_const_lv6_3E.is_01() || !tmp_s_fu_270_p3.read().is_01())? sc_lv<6>(): (sc_bigint<6>(ap_const_lv6_3E) - sc_biguint<6>(tmp_s_fu_270_p3.read()));
}

void scaled_fixed2ieee::thread_Lo_assign_fu_284_p2() {
    Lo_assign_fu_284_p2 = (!ap_const_lv6_2F.is_01() || !tmp_s_fu_270_p3.read().is_01())? sc_lv<6>(): (sc_bigint<6>(ap_const_lv6_2F) - sc_biguint<6>(tmp_s_fu_270_p3.read()));
}

void scaled_fixed2ieee::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void scaled_fixed2ieee::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void scaled_fixed2ieee::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void scaled_fixed2ieee::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void scaled_fixed2ieee::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void scaled_fixed2ieee::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void scaled_fixed2ieee::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void scaled_fixed2ieee::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_67_fu_512_p2.read()) || 
           esl_seteq<1,1,1>(tmp_99_reg_641.read(), ap_const_lv1_1))))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void scaled_fixed2ieee::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void scaled_fixed2ieee::thread_ap_phi_mux_p_Val2_9_in_phi_fu_224_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_99_reg_641.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_67_fu_512_p2.read()))) {
        ap_phi_mux_p_Val2_9_in_phi_fu_224_p4 = r_V_36_fu_503_p3.read();
    } else {
        ap_phi_mux_p_Val2_9_in_phi_fu_224_p4 = p_Val2_9_in_reg_221.read();
    }
}

void scaled_fixed2ieee::thread_ap_phi_mux_shift_1_phi_fu_234_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_99_reg_641.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_67_fu_512_p2.read()))) {
        ap_phi_mux_shift_1_phi_fu_234_p4 = shift_2_fu_458_p2.read();
    } else {
        ap_phi_mux_shift_1_phi_fu_234_p4 = shift_1_reg_231.read();
    }
}

void scaled_fixed2ieee::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_67_fu_512_p2.read()) || 
          esl_seteq<1,1,1>(tmp_99_reg_641.read(), ap_const_lv1_1)))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void scaled_fixed2ieee::thread_ap_return() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_67_fu_512_p2.read()) || 
          esl_seteq<1,1,1>(tmp_99_reg_641.read(), ap_const_lv1_1)))) {
        ap_return = result_write_assign_fu_592_p1.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void scaled_fixed2ieee::thread_c_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        c_address0 =  (sc_lv<2>) (tmp_64_fu_453_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        c_address0 =  (sc_lv<2>) (tmp_62_reg_631.read());
    } else {
        c_address0 = "XX";
    }
}

void scaled_fixed2ieee::thread_c_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        c_ce0 = ap_const_logic_1;
    } else {
        c_ce0 = ap_const_logic_0;
    }
}

void scaled_fixed2ieee::thread_c_d0() {
    c_d0 = esl_cttz<32,32>(p_Result_39_fu_420_p4.read());
}

void scaled_fixed2ieee::thread_c_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        c_we0 = ap_const_logic_1;
    } else {
        c_we0 = ap_const_logic_0;
    }
}

void scaled_fixed2ieee::thread_exitcond6_fu_241_p2() {
    exitcond6_fu_241_p2 = (!i_reg_165.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_165.read() == ap_const_lv2_3);
}

void scaled_fixed2ieee::thread_exitcond_fu_403_p2() {
    exitcond_fu_403_p2 = (!i1_reg_177.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i1_reg_177.read() == ap_const_lv3_4);
}

void scaled_fixed2ieee::thread_i_5_fu_247_p2() {
    i_5_fu_247_p2 = (!i_reg_165.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i_reg_165.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void scaled_fixed2ieee::thread_i_6_fu_409_p2() {
    i_6_fu_409_p2 = (!i1_reg_177.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i1_reg_177.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void scaled_fixed2ieee::thread_i_7_fu_447_p2() {
    i_7_fu_447_p2 = (!i2_reg_210.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i2_reg_210.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void scaled_fixed2ieee::thread_isNeg_fu_465_p3() {
    isNeg_fu_465_p3 = c_q0.read().range(31, 31);
}

void scaled_fixed2ieee::thread_newexp_fu_527_p2() {
    newexp_fu_527_p2 = (!tmp_82_cast_fu_523_p1.read().is_01() || !ap_phi_mux_shift_1_phi_fu_234_p4.read().is_01())? sc_lv<32>(): (sc_bigint<32>(tmp_82_cast_fu_523_p1.read()) - sc_biguint<32>(ap_phi_mux_shift_1_phi_fu_234_p4.read()));
}

void scaled_fixed2ieee::thread_or_cond_fu_546_p2() {
    or_cond_fu_546_p2 = (tmp_101_fu_533_p3.read() | tmp_69_fu_541_p2.read());
}

void scaled_fixed2ieee::thread_out_bits_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        out_bits_V_address0 =  (sc_lv<2>) (tmp_62_fu_415_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        out_bits_V_address0 = out_bits_V_addr_1_reg_618.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond6_fu_241_p2.read(), ap_const_lv1_1))) {
        out_bits_V_address0 =  (sc_lv<2>) (ap_const_lv64_3);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond6_fu_241_p2.read(), ap_const_lv1_0))) {
        out_bits_V_address0 =  (sc_lv<2>) (tmp_fu_253_p1.read());
    } else {
        out_bits_V_address0 = "XX";
    }
}

void scaled_fixed2ieee::thread_out_bits_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond6_fu_241_p2.read(), ap_const_lv1_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond6_fu_241_p2.read(), ap_const_lv1_1)))) {
        out_bits_V_ce0 = ap_const_logic_1;
    } else {
        out_bits_V_ce0 = ap_const_logic_0;
    }
}

void scaled_fixed2ieee::thread_out_bits_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        out_bits_V_d0 = p_Result_4_fu_390_p5.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond6_fu_241_p2.read(), ap_const_lv1_1))) {
        out_bits_V_d0 = tmp_83_fu_261_p3.read();
    } else {
        out_bits_V_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void scaled_fixed2ieee::thread_out_bits_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        out_bits_V_we0 = ap_const_lv4_F;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond6_fu_241_p2.read(), ap_const_lv1_1))) {
        out_bits_V_we0 = ap_const_lv4_C;
    } else {
        out_bits_V_we0 = ap_const_lv4_0;
    }
}

void scaled_fixed2ieee::thread_out_exp_V_fu_574_p3() {
    out_exp_V_fu_574_p3 = (!or_cond_fu_546_p2.read()[0].is_01())? sc_lv<11>(): ((or_cond_fu_546_p2.read()[0].to_bool())? ap_const_lv11_0: tmp_102_fu_552_p1.read());
}

void scaled_fixed2ieee::thread_p_Result_39_fu_420_p4() {
    p_Result_39_fu_420_p4 = out_bits_V_q0.read().range(0, 31);
}

void scaled_fixed2ieee::thread_p_Result_40_fu_582_p4() {
    p_Result_40_fu_582_p4 = esl_concat<12,52>(esl_concat<1,11>(ap_const_lv1_0, out_exp_V_fu_574_p3.read()), significand_V_fu_566_p3.read());
}

void scaled_fixed2ieee::thread_p_Result_4_fu_390_p5() {
    p_Result_4_fu_390_p5 = esl_partset<32,32,17,32,32>(out_bits_V_q0.read(), tmp_61_fu_382_p3.read(), ap_const_lv32_F, ap_const_lv32_1F);
}

void scaled_fixed2ieee::thread_p_Result_s_fu_372_p2() {
    p_Result_s_fu_372_p2 = (tmp_95_fu_360_p2.read() & tmp_96_fu_366_p2.read());
}

void scaled_fixed2ieee::thread_phitmp1_fu_556_p4() {
    phitmp1_fu_556_p4 = ap_phi_mux_p_Val2_9_in_phi_fu_224_p4.read().range(61, 10);
}

void scaled_fixed2ieee::thread_r_V_36_fu_503_p3() {
    r_V_36_fu_503_p3 = (!isNeg_fu_465_p3.read()[0].is_01())? sc_lv<63>(): ((isNeg_fu_465_p3.read()[0].to_bool())? r_V_fu_491_p2.read(): r_V_8_fu_497_p2.read());
}

void scaled_fixed2ieee::thread_r_V_8_fu_497_p2() {
    r_V_8_fu_497_p2 = (!tmp_66_fu_487_p1.read().is_01())? sc_lv<63>(): p_s_reg_188.read() << (unsigned short)tmp_66_fu_487_p1.read().to_uint();
}

void scaled_fixed2ieee::thread_r_V_fu_491_p2() {
    r_V_fu_491_p2 = (!p_s_reg_188.read().is_01() || !tmp_66_fu_487_p1.read().is_01())? sc_lv<63>(): sc_bigint<63>(p_s_reg_188.read()) >> (unsigned short)tmp_66_fu_487_p1.read().to_uint();
}

void scaled_fixed2ieee::thread_result_write_assign_fu_592_p1() {
    result_write_assign_fu_592_p1 = p_Result_40_fu_582_p4.read();
}

void scaled_fixed2ieee::thread_shift_2_fu_458_p2() {
    shift_2_fu_458_p2 = (!c_q0.read().is_01() || !shift_reg_198.read().is_01())? sc_lv<32>(): (sc_biguint<32>(c_q0.read()) + sc_biguint<32>(shift_reg_198.read()));
}

void scaled_fixed2ieee::thread_significand_V_fu_566_p3() {
    significand_V_fu_566_p3 = (!or_cond_fu_546_p2.read()[0].is_01())? sc_lv<52>(): ((or_cond_fu_546_p2.read()[0].to_bool())? ap_const_lv52_0: phitmp1_fu_556_p4.read());
}

void scaled_fixed2ieee::thread_tmp_101_fu_533_p3() {
    tmp_101_fu_533_p3 = newexp_fu_527_p2.read().range(31, 31);
}

void scaled_fixed2ieee::thread_tmp_102_fu_552_p1() {
    tmp_102_fu_552_p1 = newexp_fu_527_p2.read().range(11-1, 0);
}

void scaled_fixed2ieee::thread_tmp_61_fu_382_p3() {
    tmp_61_fu_382_p3 = esl_concat<16,1>(tmp_98_fu_378_p1.read(), ap_const_lv1_1);
}

void scaled_fixed2ieee::thread_tmp_62_fu_415_p1() {
    tmp_62_fu_415_p1 = esl_zext<64,3>(i1_reg_177.read());
}

void scaled_fixed2ieee::thread_tmp_64_fu_453_p1() {
    tmp_64_fu_453_p1 = esl_zext<64,3>(i2_reg_210.read());
}

void scaled_fixed2ieee::thread_tmp_65_fu_473_p2() {
    tmp_65_fu_473_p2 = (!ap_const_lv32_0.is_01() || !c_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(c_q0.read()));
}

void scaled_fixed2ieee::thread_tmp_66_fu_487_p1() {
    tmp_66_fu_487_p1 = esl_zext<63,32>(ush_fu_479_p3.read());
}

void scaled_fixed2ieee::thread_tmp_67_fu_512_p2() {
    tmp_67_fu_512_p2 = (!c_q0.read().is_01() || !ap_const_lv32_10.is_01())? sc_lv<1>(): sc_lv<1>(c_q0.read() == ap_const_lv32_10);
}

void scaled_fixed2ieee::thread_tmp_68_fu_518_p2() {
    tmp_68_fu_518_p2 = (!ap_const_lv12_3FF.is_01() || !prescale.read().is_01())? sc_lv<12>(): (sc_biguint<12>(ap_const_lv12_3FF) - sc_biguint<12>(prescale.read()));
}

void scaled_fixed2ieee::thread_tmp_69_fu_541_p2() {
    tmp_69_fu_541_p2 = (!in_V.read().is_01() || !ap_const_lv63_0.is_01())? sc_lv<1>(): sc_lv<1>(in_V.read() == ap_const_lv63_0);
}

void scaled_fixed2ieee::thread_tmp_82_cast_fu_523_p1() {
    tmp_82_cast_fu_523_p1 = esl_sext<32,12>(tmp_68_fu_518_p2.read());
}

void scaled_fixed2ieee::thread_tmp_82_fu_258_p1() {
    tmp_82_fu_258_p1 = in_V.read().range(15-1, 0);
}

void scaled_fixed2ieee::thread_tmp_83_fu_261_p3() {
    tmp_83_fu_261_p3 = esl_concat<15,17>(tmp_82_fu_258_p1.read(), ap_const_lv17_10000);
}

void scaled_fixed2ieee::thread_tmp_84_fu_290_p2() {
    tmp_84_fu_290_p2 = (!Lo_assign_fu_284_p2.read().is_01() || !Hi_assign_fu_278_p2.read().is_01())? sc_lv<1>(): (sc_biguint<6>(Lo_assign_fu_284_p2.read()) > sc_biguint<6>(Hi_assign_fu_278_p2.read()));
}

void scaled_fixed2ieee::thread_tmp_85_fu_296_p4() {
    tmp_85_fu_296_p4 = in_V.read().range(0, 62);
}

void scaled_fixed2ieee::thread_tmp_86_fu_305_p2() {
    tmp_86_fu_305_p2 = (!Lo_assign_fu_284_p2.read().is_01() || !Hi_assign_fu_278_p2.read().is_01())? sc_lv<6>(): (sc_biguint<6>(Lo_assign_fu_284_p2.read()) - sc_biguint<6>(Hi_assign_fu_278_p2.read()));
}

void scaled_fixed2ieee::thread_tmp_87_fu_311_p2() {
    tmp_87_fu_311_p2 = (!ap_const_lv6_3E.is_01() || !Lo_assign_fu_284_p2.read().is_01())? sc_lv<6>(): (sc_bigint<6>(ap_const_lv6_3E) - sc_biguint<6>(Lo_assign_fu_284_p2.read()));
}

void scaled_fixed2ieee::thread_tmp_88_fu_317_p2() {
    tmp_88_fu_317_p2 = (!Hi_assign_fu_278_p2.read().is_01() || !Lo_assign_fu_284_p2.read().is_01())? sc_lv<6>(): (sc_biguint<6>(Hi_assign_fu_278_p2.read()) - sc_biguint<6>(Lo_assign_fu_284_p2.read()));
}

void scaled_fixed2ieee::thread_tmp_89_fu_323_p3() {
    tmp_89_fu_323_p3 = (!tmp_84_fu_290_p2.read()[0].is_01())? sc_lv<6>(): ((tmp_84_fu_290_p2.read()[0].to_bool())? tmp_86_fu_305_p2.read(): tmp_88_fu_317_p2.read());
}

void scaled_fixed2ieee::thread_tmp_90_fu_331_p3() {
    tmp_90_fu_331_p3 = (!tmp_84_fu_290_p2.read()[0].is_01())? sc_lv<63>(): ((tmp_84_fu_290_p2.read()[0].to_bool())? tmp_85_fu_296_p4.read(): in_V.read());
}

void scaled_fixed2ieee::thread_tmp_91_fu_338_p3() {
    tmp_91_fu_338_p3 = (!tmp_84_fu_290_p2.read()[0].is_01())? sc_lv<6>(): ((tmp_84_fu_290_p2.read()[0].to_bool())? tmp_87_fu_311_p2.read(): Lo_assign_fu_284_p2.read());
}

void scaled_fixed2ieee::thread_tmp_92_fu_346_p2() {
    tmp_92_fu_346_p2 = (!ap_const_lv6_3E.is_01() || !tmp_89_fu_323_p3.read().is_01())? sc_lv<6>(): (sc_bigint<6>(ap_const_lv6_3E) - sc_biguint<6>(tmp_89_fu_323_p3.read()));
}

void scaled_fixed2ieee::thread_tmp_93_fu_352_p1() {
    tmp_93_fu_352_p1 = esl_zext<63,6>(tmp_91_fu_338_p3.read());
}

void scaled_fixed2ieee::thread_tmp_94_fu_356_p1() {
    tmp_94_fu_356_p1 = esl_zext<63,6>(tmp_92_fu_346_p2.read());
}

void scaled_fixed2ieee::thread_tmp_95_fu_360_p2() {
    tmp_95_fu_360_p2 = (!tmp_93_fu_352_p1.read().is_01())? sc_lv<63>(): tmp_90_fu_331_p3.read() >> (unsigned short)tmp_93_fu_352_p1.read().to_uint();
}

void scaled_fixed2ieee::thread_tmp_96_fu_366_p2() {
    tmp_96_fu_366_p2 = (!tmp_94_fu_356_p1.read().is_01())? sc_lv<63>(): ap_const_lv63_7FFFFFFFFFFFFFFF >> (unsigned short)tmp_94_fu_356_p1.read().to_uint();
}

void scaled_fixed2ieee::thread_tmp_98_fu_378_p1() {
    tmp_98_fu_378_p1 = p_Result_s_fu_372_p2.read().range(16-1, 0);
}

void scaled_fixed2ieee::thread_tmp_99_fu_439_p3() {
    tmp_99_fu_439_p3 = i2_reg_210.read().range(2, 2);
}

void scaled_fixed2ieee::thread_tmp_fu_253_p1() {
    tmp_fu_253_p1 = esl_zext<64,2>(i_reg_165.read());
}

void scaled_fixed2ieee::thread_tmp_s_fu_270_p3() {
    tmp_s_fu_270_p3 = esl_concat<2,4>(i_reg_165.read(), ap_const_lv4_0);
}

void scaled_fixed2ieee::thread_ush_fu_479_p3() {
    ush_fu_479_p3 = (!isNeg_fu_465_p3.read()[0].is_01())? sc_lv<32>(): ((isNeg_fu_465_p3.read()[0].to_bool())? tmp_65_fu_473_p2.read(): c_q0.read());
}

void scaled_fixed2ieee::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond6_fu_241_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond_fu_403_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_67_fu_512_p2.read()) || 
  esl_seteq<1,1,1>(tmp_99_reg_641.read(), ap_const_lv1_1)))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<7>) ("XXXXXXX");
            break;
    }
}

}

