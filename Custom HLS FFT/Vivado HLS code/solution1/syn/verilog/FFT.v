// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module FFT (
        to_FFT_dout,
        to_FFT_empty_n,
        to_FFT_read,
        from_FFT_din,
        from_FFT_full_n,
        from_FFT_write,
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input  [63:0] to_FFT_dout;
input   to_FFT_empty_n;
output   to_FFT_read;
output  [63:0] from_FFT_din;
input   from_FFT_full_n;
output   from_FFT_write;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    write_FFT_data_1200_U0_ap_start;
wire    write_FFT_data_1200_U0_start_full_n;
wire    write_FFT_data_1200_U0_ap_done;
wire    write_FFT_data_1200_U0_ap_continue;
wire    write_FFT_data_1200_U0_ap_idle;
wire    write_FFT_data_1200_U0_ap_ready;
wire    write_FFT_data_1200_U0_start_out;
wire    write_FFT_data_1200_U0_start_write;
wire    write_FFT_data_1200_U0_fft_config_data_V_read;
wire   [23:0] write_FFT_data_1200_U0_fft_config_data_V_din;
wire    write_FFT_data_1200_U0_fft_config_data_V_write;
wire   [63:0] write_FFT_data_1200_U0_to_FFT_2_din;
wire    write_FFT_data_1200_U0_to_FFT_2_write;
wire    write_FFT_data_1200_U0_to_FFT_read;
wire    fft_FFT_params_U0_ap_start;
wire    fft_FFT_params_U0_ap_done;
wire    fft_FFT_params_U0_ap_idle;
wire    fft_FFT_params_U0_ap_ready;
wire    fft_FFT_params_U0_ap_continue;
wire    fft_FFT_params_U0_xn_read;
wire   [63:0] fft_FFT_params_U0_xk_din;
wire    fft_FFT_params_U0_xk_write;
wire   [7:0] fft_FFT_params_U0_status_data_V_din;
wire    fft_FFT_params_U0_status_data_V_write;
wire    fft_FFT_params_U0_config_ch_data_V_read;
wire    read_FFT_data_1201_U0_ap_start;
wire    read_FFT_data_1201_U0_ap_done;
wire    read_FFT_data_1201_U0_ap_continue;
wire    read_FFT_data_1201_U0_ap_idle;
wire    read_FFT_data_1201_U0_ap_ready;
wire    read_FFT_data_1201_U0_from_FFT_2_read;
wire   [63:0] read_FFT_data_1201_U0_from_FFT_din;
wire    read_FFT_data_1201_U0_from_FFT_write;
wire    ap_sync_continue;
wire    FFT_config_data_V_full_n;
wire   [23:0] FFT_config_data_V_dout;
wire    FFT_config_data_V_empty_n;
wire    fft_FFT_params_U0_config_ch_data_V_full_n;
wire    fft_FFT_params_U0_config_ch_data_V_write;
wire   [23:0] fft_FFT_params_U0_config_ch_data_V_din;
wire    x_in_channel_full_n;
wire   [63:0] x_in_channel_dout;
wire    x_in_channel_empty_n;
wire    x_out_channel_full_n;
wire   [63:0] x_out_channel_dout;
wire    x_out_channel_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
wire   [0:0] start_for_fft_FFT_params_U0_din;
wire    start_for_fft_FFT_params_U0_full_n;
wire   [0:0] start_for_fft_FFT_params_U0_dout;
wire    start_for_fft_FFT_params_U0_empty_n;
wire   [0:0] start_for_read_FFT_data_1201_U0_din;
wire    start_for_read_FFT_data_1201_U0_full_n;
wire   [0:0] start_for_read_FFT_data_1201_U0_dout;
wire    start_for_read_FFT_data_1201_U0_empty_n;
wire    fft_FFT_params_U0_start_full_n;
wire    fft_FFT_params_U0_start_write;
wire    read_FFT_data_1201_U0_start_full_n;
wire    read_FFT_data_1201_U0_start_write;

write_FFT_data_1200 write_FFT_data_1200_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(write_FFT_data_1200_U0_ap_start),
    .start_full_n(write_FFT_data_1200_U0_start_full_n),
    .ap_done(write_FFT_data_1200_U0_ap_done),
    .ap_continue(write_FFT_data_1200_U0_ap_continue),
    .ap_idle(write_FFT_data_1200_U0_ap_idle),
    .ap_ready(write_FFT_data_1200_U0_ap_ready),
    .start_out(write_FFT_data_1200_U0_start_out),
    .start_write(write_FFT_data_1200_U0_start_write),
    .fft_config_data_V_dout(FFT_config_data_V_dout),
    .fft_config_data_V_empty_n(FFT_config_data_V_empty_n),
    .fft_config_data_V_read(write_FFT_data_1200_U0_fft_config_data_V_read),
    .fft_config_data_V_din(write_FFT_data_1200_U0_fft_config_data_V_din),
    .fft_config_data_V_full_n(1'b1),
    .fft_config_data_V_write(write_FFT_data_1200_U0_fft_config_data_V_write),
    .to_FFT_2_din(write_FFT_data_1200_U0_to_FFT_2_din),
    .to_FFT_2_full_n(x_in_channel_full_n),
    .to_FFT_2_write(write_FFT_data_1200_U0_to_FFT_2_write),
    .to_FFT_dout(to_FFT_dout),
    .to_FFT_empty_n(to_FFT_empty_n),
    .to_FFT_read(write_FFT_data_1200_U0_to_FFT_read)
);

fft_FFT_params_s fft_FFT_params_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(fft_FFT_params_U0_ap_start),
    .ap_ce(1'b1),
    .ap_done(fft_FFT_params_U0_ap_done),
    .ap_idle(fft_FFT_params_U0_ap_idle),
    .ap_ready(fft_FFT_params_U0_ap_ready),
    .ap_continue(fft_FFT_params_U0_ap_continue),
    .xn_dout(x_in_channel_dout),
    .xn_empty_n(x_in_channel_empty_n),
    .xn_read(fft_FFT_params_U0_xn_read),
    .xk_din(fft_FFT_params_U0_xk_din),
    .xk_full_n(x_out_channel_full_n),
    .xk_write(fft_FFT_params_U0_xk_write),
    .status_data_V_din(fft_FFT_params_U0_status_data_V_din),
    .status_data_V_full_n(1'b1),
    .status_data_V_write(fft_FFT_params_U0_status_data_V_write),
    .config_ch_data_V_dout(24'd0),
    .config_ch_data_V_empty_n(1'b1),
    .config_ch_data_V_read(fft_FFT_params_U0_config_ch_data_V_read)
);

read_FFT_data_1201 read_FFT_data_1201_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(read_FFT_data_1201_U0_ap_start),
    .ap_done(read_FFT_data_1201_U0_ap_done),
    .ap_continue(read_FFT_data_1201_U0_ap_continue),
    .ap_idle(read_FFT_data_1201_U0_ap_idle),
    .ap_ready(read_FFT_data_1201_U0_ap_ready),
    .from_FFT_2_dout(x_out_channel_dout),
    .from_FFT_2_empty_n(x_out_channel_empty_n),
    .from_FFT_2_read(read_FFT_data_1201_U0_from_FFT_2_read),
    .from_FFT_din(read_FFT_data_1201_U0_from_FFT_din),
    .from_FFT_full_n(from_FFT_full_n),
    .from_FFT_write(read_FFT_data_1201_U0_from_FFT_write)
);

fifo_w24_d2_A FFT_config_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(fft_FFT_params_U0_config_ch_data_V_din),
    .if_full_n(FFT_config_data_V_full_n),
    .if_write(fft_FFT_params_U0_config_ch_data_V_write),
    .if_dout(FFT_config_data_V_dout),
    .if_empty_n(FFT_config_data_V_empty_n),
    .if_read(write_FFT_data_1200_U0_fft_config_data_V_read)
);

fifo_w64_d1024_A x_in_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(write_FFT_data_1200_U0_to_FFT_2_din),
    .if_full_n(x_in_channel_full_n),
    .if_write(write_FFT_data_1200_U0_to_FFT_2_write),
    .if_dout(x_in_channel_dout),
    .if_empty_n(x_in_channel_empty_n),
    .if_read(fft_FFT_params_U0_xn_read)
);

fifo_w64_d1024_A x_out_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(fft_FFT_params_U0_xk_din),
    .if_full_n(x_out_channel_full_n),
    .if_write(fft_FFT_params_U0_xk_write),
    .if_dout(x_out_channel_dout),
    .if_empty_n(x_out_channel_empty_n),
    .if_read(read_FFT_data_1201_U0_from_FFT_2_read)
);

start_for_fft_FFT_params_U0 start_for_fft_FFT_params_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_fft_FFT_params_U0_din),
    .if_full_n(start_for_fft_FFT_params_U0_full_n),
    .if_write(write_FFT_data_1200_U0_start_write),
    .if_dout(start_for_fft_FFT_params_U0_dout),
    .if_empty_n(start_for_fft_FFT_params_U0_empty_n),
    .if_read(fft_FFT_params_U0_ap_ready)
);

start_for_read_FFT_data_1201_U0 start_for_read_FFT_data_1201_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_read_FFT_data_1201_U0_din),
    .if_full_n(start_for_read_FFT_data_1201_U0_full_n),
    .if_write(write_FFT_data_1200_U0_start_write),
    .if_dout(start_for_read_FFT_data_1201_U0_dout),
    .if_empty_n(start_for_read_FFT_data_1201_U0_empty_n),
    .if_read(read_FFT_data_1201_U0_ap_ready)
);

assign ap_done = read_FFT_data_1201_U0_ap_done;

assign ap_idle = (write_FFT_data_1200_U0_ap_idle & read_FFT_data_1201_U0_ap_idle & fft_FFT_params_U0_ap_idle);

assign ap_ready = write_FFT_data_1200_U0_ap_ready;

assign ap_sync_continue = ap_continue;

assign ap_sync_done = read_FFT_data_1201_U0_ap_done;

assign ap_sync_ready = write_FFT_data_1200_U0_ap_ready;

assign fft_FFT_params_U0_ap_continue = 1'b1;

assign fft_FFT_params_U0_ap_start = start_for_fft_FFT_params_U0_empty_n;

assign fft_FFT_params_U0_config_ch_data_V_din = 24'd0;

assign fft_FFT_params_U0_config_ch_data_V_full_n = FFT_config_data_V_full_n;

assign fft_FFT_params_U0_config_ch_data_V_write = 1'b0;

assign fft_FFT_params_U0_start_full_n = 1'b1;

assign fft_FFT_params_U0_start_write = 1'b0;

assign from_FFT_din = read_FFT_data_1201_U0_from_FFT_din;

assign from_FFT_write = read_FFT_data_1201_U0_from_FFT_write;

assign read_FFT_data_1201_U0_ap_continue = ap_continue;

assign read_FFT_data_1201_U0_ap_start = start_for_read_FFT_data_1201_U0_empty_n;

assign read_FFT_data_1201_U0_start_full_n = 1'b1;

assign read_FFT_data_1201_U0_start_write = 1'b0;

assign start_for_fft_FFT_params_U0_din = 1'b1;

assign start_for_read_FFT_data_1201_U0_din = 1'b1;

assign to_FFT_read = write_FFT_data_1200_U0_to_FFT_read;

assign write_FFT_data_1200_U0_ap_continue = 1'b1;

assign write_FFT_data_1200_U0_ap_start = ap_start;

assign write_FFT_data_1200_U0_start_full_n = (start_for_read_FFT_data_1201_U0_full_n & start_for_fft_FFT_params_U0_full_n);

endmodule //FFT
